{"version":3,"sources":["utils/index.js","graphql.js","components/Header.jsx","App.jsx","components/Project.jsx","pages/Explorer.jsx","assets/puzzle.svg","components/Select.jsx","utils/cropImage.js","components/Report.jsx","pages/ProjectInfo.jsx","pages/Profile.jsx","index.js"],"names":["getContract","chainId","contractAddresses","getNetwork","name","rpcUrl","subgraph","explorer","ipfs","ipfsHttpClient","useContract","useCelo","address","kit","useState","contract","setContract","cUSD","setCUSD","balance","setBalance","fetchBalance","useCallback","erc20","a","methods","balanceOf","call","parseFloat","ethers","utils","formatUnits","toFixed","useEffect","window","connection","web3","eth","Contract","abi","usdTokenAddress","then","CUSD","event","setImg","selectedFile","target","files","reader","FileReader","img","document","createElement","className","width","height","title","body","appendChild","ditherjs","DitherJS","step","palette","algorithm","onload","dither","canvas","querySelector","ctx","getContext","imgData","getImageData","i","data","length","canvas1","ctx1","putImageData","toDataURL","Promise","resolve","toBlob","dataUrl","blob","src","result","readAsDataURL","escapeHtml","unsafe","replaceAll","notificationVar","makeVar","createClient","ApolloClient","uri","cache","InMemoryCache","typePolicies","Query","fields","notification","read","ALL_PROJECTS","gql","PROJECT_INFO","PROFILE","Header","connect","network","destroy","useReactiveVar","to","location","pathname","includes","onClick","App","useParams","dapp","description","url","icon","ApolloProvider","client","Project","project","percentage","BigNumber","from","fundedAmount","mul","div","requestedAmount","toNumber","id","image","alt","style","Explorer","_path","useQuery","onError","error","message","projects","map","p","_excluded","_extends","Object","assign","bind","arguments","source","key","prototype","hasOwnProperty","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPuzzle","_ref","svgRef","titleId","props","viewBox","fill","xmlns","ref","d","stroke","ForwardRef","Select","contribution","setContribution","requested","totalPieces","c","disabled","inputMode","onChange","e","value","min","createImage","reject","Image","addEventListener","setAttribute","getRadianAngle","degreeValue","Math","PI","rotateSize","rotation","rotRad","abs","cos","sin","getCroppedImg","imageSrc","pixelCrop","flip","horizontal","vertical","bBoxWidth","bBoxHeight","translate","rotate","scale","drawImage","x","y","file","URL","createObjectURL","Report","userAddress","modal","setModal","useRef","rows","placeholder","reportUser","current","send","Number","toString","console","ProjectInfo","create","projectId","navigate","useNavigate","variables","skip","refetch","mode","setMode","intersecting","setIntersecting","refs","Array","React","createRef","amount","setAmount","setTitle","setDescription","setMessage","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","observer","IntersectionObserver","isIntersecting","dataset","index","filter","rootMargin","forEach","observe","disconnect","toClaim","sub","claimedAmount","funded","receiptsNb","collection","receipts","ranges","reduce","acc","curr","chosen","aspect","onCropChange","onCropComplete","_","objectFit","onZoomChange","href","matchAll","m","owner","findIndex","clipPath","match","opacity","transition","htmlFor","type","onFileSelected","accept","donators","onMouseOver","onMouseOut","creator","toLowerCase","slice","Date","createdAt","toLocaleDateString","r","donator","timestamp","undefined","day","month","reports","strokeWidth","isNaN","trim","croppedImage","fetch","add","path","query","createProject","parseUnits","fetchCreateProject","cached","cachedMyProjects","fetchPolicy","setTimeout","editProject","fetchEditProject","readQuery","cachedUpdatedAt","updatedAt","claimProjectFunds","fetchClaimProjectFunds","cachedClaimedAmount","navigator","clipboard","writeText","origin","donation","approve","donateToProject","fetchDonateToProject","cachedMyDonations","Profile","dataImgs","setDataImgs","ReactNativeWebView","receipt","onerror","dataImg","link","split","join","replace","container","getElementById","createRoot","render","StrictMode","element"],"mappings":"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","file":"static/js/main.97bf23d3.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { useCelo } from '@celo/react-celo'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport { ethers } from 'ethers'\nimport DitherJS from 'ditherjs'\nimport contractAddresses from '../contracts/contract-address.json'\nimport Contract from '../contracts/Contract.json'\nimport CUSD from '../contracts/CUSD.json'\n\nexport const getContract = chainId => contractAddresses[chainId]\nexport const getAbi = () => Contract.abi\nexport const getNetwork = chainId => ({\n  1337: {\n    name: 'Localhost',\n    rpcUrl: 'http://localhost:8545',\n    subgraph: 'http://localhost:8000/subgraphs/name/yip-theodore/qavah',\n  },\n  44787: {\n    name: 'Alfajores',\n    rpcUrl: 'https://alfajores-forno.celo-testnet.org',\n    explorer: 'https://alfajores-blockscout.celo-testnet.org',\n    subgraph: 'https://api.thegraph.com/subgraphs/name/yip-theodore/qavah',\n  },\n  42220: {\n    name: 'Celo',\n    rpcUrl: 'https://forno.celo.org',\n    explorer: 'https://explorer.celo.org',\n    subgraph: 'https://api.thegraph.com/subgraphs/name/yip-theodore/qavah-celo-mainnet',\n  }\n})[chainId]\n\nexport const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n\nexport const useContract = (chainId) => {\n  const { address, kit } = useCelo()\n  const [ contract, setContract ] = useState(null)\n  const [ cUSD, setCUSD ] = useState(null)\n  const [ balance, setBalance ] = useState(null)\n\n  const fetchBalance = useCallback(async (erc20) => {\n    const balance = await erc20.methods.balanceOf(address).call()\n    setBalance(parseFloat(ethers.utils.formatUnits(balance, 18)).toFixed(2))\n  }, [ address ])\n\n  useEffect(() => {\n    if (address) {\n      window.contract = new kit.connection.web3.eth.Contract(\n        getAbi(),\n        getContract(chainId),\n      )\n      setContract(window.contract)\n      window.contract.methods.usdTokenAddress(\n      ).call().then(usdTokenAddress => {\n        const cUSD = new kit.connection.web3.eth.Contract(\n          CUSD.abi,\n          usdTokenAddress,\n        )\n        fetchBalance(cUSD)\n        setCUSD(cUSD)\n      })\n    }\n  }, [ address, chainId, fetchBalance, kit.connection.web3.eth.Contract ])\n\n\n  return { address, contract, balance, cUSD, fetchBalance }\n}\n\nexport async function onFileSelected (event, setImg) {\n  var selectedFile = event.target.files[0]\n  var reader = new FileReader()\n  if (!selectedFile) return\n\n  const img = document.createElement('img')\n  img.className = 'img'\n  img.width = 640\n  img.height = 360\n  img.title = selectedFile.name\n  document.body.appendChild(img)\n\n  const ditherjs = new DitherJS({\n    step: 1,\n    palette: [[0, 0, 0], [255, 255, 255]],\n    algorithm: 'atkinson' // one of ['ordered', 'diffusion', 'atkinson']\n  })\n  reader.onload = function (event) {\n    img.onload = async () => {\n      ditherjs.dither(img)\n      const canvas = document.querySelector('canvas:last-child')\n      const ctx = canvas.getContext('2d')\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n      for (var i = 0; i < imgData.data.length; i += 4) {\n        if (imgData.data[i + 0]) {\n          imgData.data[i + 0] = 251\n          imgData.data[i + 1] = 204\n          imgData.data[i + 2] = 92\n        } else {\n          imgData.data[i + 0] = 97\n          imgData.data[i + 1] = 31\n          imgData.data[i + 2] = 105\n        }\n      }\n      const canvas1 = document.createElement('canvas')\n      canvas1.className = 'canvas'\n      const ctx1 = canvas1.getContext('2d')\n      canvas1.width = canvas.width\n      canvas1.height = canvas.height\n      ctx1.putImageData(imgData, 0, 0)\n      setImg({\n        dataUrl: canvas1.toDataURL(),\n        blob: await new Promise(resolve => canvas1.toBlob(resolve)),\n        width: canvas1.width,\n        height: canvas1.height,\n      })\n    }\n    img.src = event.target.result\n  }\n  reader.readAsDataURL(selectedFile)\n}\n\nexport const escapeHtml = (unsafe) => {\n  return unsafe.replaceAll('&', '&amp;').replaceAll('<', '&lt;').replaceAll('>', '&gt;').replaceAll('\"', '&quot;').replaceAll(\"'\", '&#039;').replaceAll('#', '%23')\n}\n","import { ApolloClient, InMemoryCache, gql, makeVar } from '@apollo/client'\nimport { getNetwork } from './utils'\n\nexport const notificationVar = makeVar('')\n\nexport const createClient = chainId => new ApolloClient({\n  uri: getNetwork(chainId)?.subgraph,\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          notification: { read: () => notificationVar() },\n        },\n      },\n    },\n  }),\n})\n\nexport const ALL_PROJECTS = gql`\n  query {\n    projects(\n      orderBy: createdAt\n      orderDirection: desc\n      where: { reports_lt: 2 }\n    ) {\n      id\n      creator {\n        id\n      }\n      title\n      requestedAmount\n      description\n      image\n      fundedAmount\n      claimedAmount\n      donators {\n        id\n      }\n      createdAt\n      collection {\n        id\n      }\n    }\n  }\n`\n\nexport const PROJECT_INFO = gql`\n  query($projectId: ID!) {\n    project(id: $projectId) {\n      id\n      creator {\n        id\n      }\n      title\n      requestedAmount\n      description\n      image\n      fundedAmount\n      claimedAmount\n      donators {\n        id\n      }\n      createdAt\n      updatedAt\n      collection {\n        id\n        receipts(orderBy: timestamp) {\n          id\n          name\n          amount\n          image\n          timestamp\n          tokenId\n          donator {\n            id\n            reports\n          }\n          message\n        }\n      }\n      createdAt\n    }\n  }\n`\n\nexport const PROFILE = gql`\n  query($userAddress: ID!) {\n    projects(\n      where: {creator: $userAddress}\n      orderBy: createdAt\n      orderDirection: desc\n    ) {\n      id\n      title\n      requestedAmount\n      description\n      image\n      fundedAmount\n    }\n    receipts(\n      where: {donator: $userAddress}\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      id\n      description\n      image\n      project {\n        id\n        image\n      }\n    }\n  }\n`","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useCelo } from '@celo/react-celo'\nimport { useReactiveVar } from '@apollo/client'\nimport { notificationVar } from '../graphql'\n\nfunction Header () {\n  const { connect, address, network, destroy } = useCelo()\n  const notification = useReactiveVar(notificationVar)\n  return (\n    <>\n      <header className='header'>\n        <Link to='' className='a logo plain'>\n          <h1 className='h1'>qavah</h1>\n          <span className=\"network\">{network.name}</span>\n        </Link>\n        {address ? (\n          <>\n          {window.location.pathname.includes('/user/' + address) ? (\n            <button className=\"a\" onClick={destroy}>Log out</button>\n          ) : (\n            <Link to={`user/${address}`} className='a'>My account</Link>\n          )}\n          </>\n        ) : (\n          <button className='a' onClick={connect}>Connect wallet</button>\n        )}\n      </header>\n      {notification && (\n        <div className='Message'>\n          <span>{notification}</span>\n          <button className='a' onClick={() => notificationVar('')}>x</button>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Outlet, useParams } from 'react-router-dom'\nimport { CeloProvider } from '@celo/react-celo'\nimport { ApolloProvider } from '@apollo/client'\nimport { createClient } from './graphql'\nimport { getNetwork } from './utils'\nimport Header from './components/Header'\nimport '@celo/react-celo/lib/styles.css'\nimport './index.scss'\n\nfunction App () {\n  const { chainId } = useParams()\n  return (\n    <CeloProvider\n      dapp={{\n        name: 'Qavah',\n        description: 'Decentralized and free of charge crowdfunding platform',\n        url: 'https://qavah.me',\n        icon: 'https://qavah.me/favicon.png',\n      }}\n      network={{\n        ...getNetwork(chainId),\n        chainId: +chainId,\n      }}\n    >\n      <ApolloProvider client={createClient(chainId)}>\n        <main>\n          <Header />\n          <Outlet />\n        </main>\n      </ApolloProvider>\n    </CeloProvider>\n  )\n}\n\nexport default App\n","import { Link, useParams } from 'react-router-dom'\nimport { ethers, BigNumber } from 'ethers'\n\nconst Project = ({ project }) => {\n  const { chainId } = useParams()\n  const percentage = BigNumber.from(project.fundedAmount).mul?.(100).div(project.requestedAmount).toNumber()\n  return (\n    <Link to={`/${chainId}/${project.id}`} className='Project'>\n      <img className='img image' src={project.image} alt='' />\n      <div className='content'>\n        <div className='title'>\n          <h3 className='h3'>{project.title}</h3>\n        </div>\n        <p className='description'>{project.description}</p>\n        <div className='bottom'>\n          <div>\n            <div className='progress'><div style={{ width: percentage + '%' }} /></div>\n            <span className='amounts'>{percentage}% funded of <b>{parseFloat(ethers.utils.formatUnits(project.requestedAmount, 18)).toFixed(2)} cUSD</b></span>\n          </div>\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nexport default Project\n","import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { ALL_PROJECTS, notificationVar } from '../graphql'\nimport Project from '../components/Project'\n\nfunction Explorer () {\n  const { data: { projects = [] } = {} } = useQuery(ALL_PROJECTS, {\n    onError: error => notificationVar(error.message),\n  })\n  return (\n    <div className='Explorer'>\n      <h2 className='h2'>All campaigns</h2>\n      <div className=\"projects\">\n        {projects.map((p, i) => (\n          <Project project={p} key={p.id} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Explorer\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPuzzle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 12 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3 7v-.8L9.2 4.5v-.3l1.3-.4.2-.8L9 1.3l-.8.2-.4 1.2-.3.1L5.8.7h-.9L3.5 2.2l.2.6 1.2.4.3.7-1.3 1.3-.7-.3-.4-1.2-.6-.2L.7 4.9v.9l2.1 1.7v.3l-1.3.4-.2.8L3 10.7l.8-.2.4-1.2.3-.1 1.7 2.1h.9l1.4-1.5-.2-.6-1.2-.4-.3-.7 1.3-1.3.7.3.4 1.2.6.2 1.5-1.4Z\",\n    stroke: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPuzzle);\nexport default __webpack_public_path__ + \"static/media/puzzle.a1cc5e0e.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as Puzzle } from '../assets/puzzle.svg'\n\nconst Select = ({ contribution, setContribution, percentage, requested, totalPieces }) => (\n  <>\n    <button\n      className='button minus'\n      onClick={() => setContribution((c) => +c - 1)}\n      disabled={contribution <= 0}\n    >-</button>\n    <input\n      className='input'\n      name='amount'\n      inputMode='numeric'\n      onChange={(e) => setContribution(e.target.value)}\n      value={contribution}\n      min={0}\n    />\n    <Puzzle width={16} height={16} />\n    <button\n      className='button plus'\n      onClick={() => setContribution((c) => +c + 1)}\n      disabled={contribution >= totalPieces - percentage}\n    >+</button>\n    <span>\n      ({contribution > 0 ? `${((contribution * requested) / totalPieces).toFixed(2)} cUSD` : '0 cUSD'})\n    </span>\n  </>\n)\n\nexport default Select","export const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nexport function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function rotateSize(width, height, rotation) {\n  const rotRad = getRadianAngle(rotation)\n\n  return {\n    width:\n      Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\n    height:\n      Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height),\n  }\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n */\nexport default async function getCroppedImg(\n  imageSrc,\n  pixelCrop,\n  rotation = 0,\n  flip = { horizontal: false, vertical: false }\n) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  if (!ctx) {\n    return null\n  }\n\n  const rotRad = getRadianAngle(rotation)\n\n  // calculate bounding box of the rotated image\n  const { width: bBoxWidth, height: bBoxHeight } = rotateSize(\n    image.width,\n    image.height,\n    rotation\n  )\n\n  // set canvas size to match the bounding box\n  canvas.width = bBoxWidth\n  canvas.height = bBoxHeight\n\n  // translate canvas context to a central location to allow rotating and flipping around the center\n  ctx.translate(bBoxWidth / 2, bBoxHeight / 2)\n  ctx.rotate(rotRad)\n  ctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1)\n  ctx.translate(-image.width / 2, -image.height / 2)\n\n  // draw rotated image\n  ctx.drawImage(image, 0, 0)\n\n  // croppedAreaPixels values are bounding box relative\n  // extract the cropped image using these values\n  const data = ctx.getImageData(\n    pixelCrop.x,\n    pixelCrop.y,\n    pixelCrop.width,\n    pixelCrop.height\n  )\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image at the top left corner\n  ctx.putImageData(data, 0, 0)\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve, reject) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","import React, { useState, useRef } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { notificationVar } from '../graphql'\nimport { useContract } from '../utils'\n\nconst Report = ({ userAddress }) => {\n  const { chainId } = useParams()\n  const { address, contract } = useContract(chainId)\n  const [modal, setModal] = useState(false)\n  const ref = useRef()\n  return (\n    <>\n      {modal === 'REPORT' && (\n        <aside className='overlay'>\n          <aside className='Modal'>\n            <div className='Modal__top'>\n              <h3>Are you sure to report this user?</h3>\n            </div>\n            <textarea ref={ref} className='textarea' rows='3' placeholder='Explain why (optional)' />\n            <div className='Modal__bottom'>\n              <button\n                className='button grow primary'\n                onClick={async () => {\n                  try {\n                    notificationVar('Please confirm…')\n                    await contract.methods.reportUser(\n                      userAddress,\n                      ref.current.value,\n                    ).send({ from: address, chainId: '0x' + Number(chainId).toString(16) })\n                    notificationVar('User reported.')\n                    setModal('')\n                  } catch (error) {\n                    console.error(error)\n                    notificationVar(error.message)\n                  }\n                }}\n              >\n                Report\n              </button>\n              <button className='button grow' onClick={() => setModal('')}>\n                Back\n              </button>\n            </div>\n          </aside>\n        </aside>\n      )}\n      <svg onClick={() => setModal('REPORT')} className='button icon' height={35} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>\n        <path fill='none' d='M0 0h24v24H0z'/><path fill='currentColor' d='M5 16v6H3V3h9.382a1 1 0 0 1 .894.553L14 5h6a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1h-6.382a1 1 0 0 1-.894-.553L12 16H5zM5 5v9h8.236l1 2H19V7h-6.236l-1-2H5z'/>\n      </svg>\n    </>\n  )\n}\n\nexport default Report","import React, { useRef, useEffect, useState } from 'react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport { useCelo } from '@celo/react-celo'\nimport { BigNumber, ethers } from 'ethers'\nimport { getContract, useContract } from '../utils'\nimport { PROJECT_INFO, ALL_PROJECTS, notificationVar } from '../graphql'\nimport { ReactComponent as Puzzle } from '../assets/puzzle.svg'\nimport Select from '../components/Select'\nimport Cropper from 'react-easy-crop'\nimport getCroppedImg from '../utils/cropImage'\nimport Report from '../components/Report'\nimport { ipfs, onFileSelected, escapeHtml } from '../utils'\n\nfunction ProjectInfo ({ create = false }) {\n  const { chainId, projectId } = useParams()\n  const navigate = useNavigate()\n  const { connect } = useCelo()\n  const { address, contract, balance, cUSD, fetchBalance } = useContract(chainId)\n\n  const { data: { project } = {}, refetch, client } = useQuery(PROJECT_INFO, {\n    variables: { projectId },\n    onError: error => notificationVar(error.message),\n    skip: create,\n  })\n\n  const [ modal, setModal ] = useState('')\n  const [ mode, setMode ] = useState(create ? 'CREATE' : '')\n  const [ intersecting, setIntersecting ] = useState([])\n  const refs = useRef([ ...Array(101) ].map(() => React.createRef()))\n  const [ contribution, setContribution ] = useState(0)\n\n  const [img, setImg] = useState({})\n  const [ amount, setAmount ] = useState('')\n  const [ title, setTitle ] = useState('')\n  const [ description, setDescription ] = useState('')\n  const [ message, setMessage ] = useState('')\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\n  const [zoom, setZoom] = useState(1)\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\n\n  useEffect(() => {\n    if (project) {\n      if (project.fundedAmount !== project.requestedAmount) {\n        setContribution(1)\n      }\n      setAmount(parseFloat(ethers.utils.formatUnits(project.requestedAmount, 18)).toFixed(2))\n      setTitle(project.title)\n      setDescription(project.description)\n      const observer = new IntersectionObserver(\n        ([{ isIntersecting, target }]) => {\n          if (isIntersecting) {\n            setIntersecting((x) => [...x, +target.dataset.index])\n          } else {\n            setIntersecting((x) => x.filter((i) => i !== +target.dataset.index))\n          }\n        },\n        { rootMargin: '-40%' }\n      )\n      refs.current.forEach((ref) => ref.current && observer.observe(ref.current))\n      return () => observer.disconnect()\n    }\n  }, [ project ])\n\n  if (!project && !mode) return null\n  \n  const totalPieces = chainId === '1337' ? 25 : 100\n  const percentage = project && BigNumber.from(project.fundedAmount).mul?.(totalPieces).div(project.requestedAmount).toNumber()\n  const toClaim = project && parseFloat(ethers.utils.formatUnits(BigNumber.from(project.fundedAmount).sub?.(project.claimedAmount) || 0, 18)).toFixed(2)\n  const funded = project && parseFloat(ethers.utils.formatUnits(project.fundedAmount, 18)).toFixed(2)\n  const requested = project && parseFloat(ethers.utils.formatUnits(project.requestedAmount, 18)).toFixed(2)\n\n  const receiptsNb = project && project.collection.receipts.length\n  const ranges = project && project.collection.receipts.reduce((acc, curr) => [\n    ...acc, (acc[acc.length - 1] || 0) + (curr.amount / requested) * totalPieces,\n  ], [])\n  const chosen = project && intersecting[intersecting.length - 1]\n\n  return (\n    <div className='ProjectInfo'>\n      {!mode ? (\n        project.collection.receipts.length ? (\n          <svg className='svg' viewBox='0 0 320 180'>\n            <defs>\n              <image id='a' href={project.image} width='320' height='180' />\n            </defs>\n            {[ ...project.collection.receipts[receiptsNb - 1].image.matchAll(/<use.*?\\/>/g) ].map((m, i) => {\n              const owner = ranges.findIndex((x) => i < x)\n              return (\n                <use\n                  key={'use' + i}\n                  href='#a'\n                  clipPath={m[0].match(/clip-path='(.*?)'/)[1]}\n                  opacity={\n                    chosen > -1\n                      ? chosen === owner\n                        ? 1\n                        : owner > -1\n                          ? 0.3\n                          : 0.1\n                      : owner > -1\n                        ? 1\n                        : 1\n                  }\n                  style={{ transition: '0.3s' }}\n                />\n              )\n            })}\n          </svg>\n        ) : (\n          <img src={project.image} alt='' />\n        )\n      ) : (\n        <aside className='container'>\n          <div className='cropper'>\n            <Cropper\n              image={img.dataUrl || project?.image}\n              aspect={16 / 9}\n              crop={crop}\n              onCropChange={setCrop}\n              onCropComplete={(_, croppedAreaPixels) => setCroppedAreaPixels(croppedAreaPixels)}\n              objectFit={img.width / img.height < 16 / 9 ? 'horizontal-cover' : 'vertical-cover'}\n              zoom={zoom}\n              onZoomChange={setZoom}\n            />\n          </div>\n        </aside>\n      )}\n      <div className='info'>\n        {mode && (\n          <div className='banner'>\n            <label className='button secondary upload' htmlFor='image'>\n              {(img.height || project?.image) ? 'Replace' : 'Upload'} image\n              <input id='image' className='input' type='file' name='image' onChange={e => onFileSelected(e, setImg)} accept='image/*' />\n            </label>\n            <span className='requested'>\n              <input\n                className='input'\n                name='requested'\n                type='number'\n                step='1'\n                min='10'\n                placeholder='100'\n                inputMode='numeric'\n                disabled={requested}\n                value={amount}\n                onChange={e => setAmount(e.target.value)}\n              />\n            </span>    \n          </div>\n        )}\n        {!mode ? (\n          <h3 className='h3'>\n            <span>{project.title}</span>\n          </h3>\n        ) : (\n          <textarea\n            className='textarea editable'\n            name='title'\n            placeholder='Your project title'\n            rows='2'\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n        )}\n        {!mode && (\n          <div className='summary'>\n            <span className='amounts'>\n              <b>{funded} cUSD</b> funded / <b>{requested}</b>\n            </span>\n            <span>\n              by <b>{project.donators.length} donators</b>\n            </span>\n          </div>\n        )}\n        {!mode ? (\n           <p className='description'>\n            <span>{project.description}</span>\n          </p>\n        ) : (\n          <textarea\n            className='textarea editable'\n            name='description'\n            placeholder='A more detailed description…'\n            rows='10'\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n          />\n        )}\n      </div>\n      {!mode && (\n        <div className='timeline'>\n          <div className='h4'>\n            Contributions ({project.collection.receipts.length})\n            <span>{100 * percentage / totalPieces}% raised</span>\n          </div>\n          <ul className='ul'>\n            <li\n              className='li'\n              ref={refs.current[100]}\n              data-index={100}\n              style={{ opacity: chosen === 100 ? 1 : 0.5 }}\n              onMouseOver={() => setIntersecting([100])}\n              onMouseOut={() => setIntersecting([])}\n            >\n              <div className='label'>\n                <h5>\n                  <Link to={`/${chainId}/user/${project.creator.id.toLowerCase()}`} className='a plain'>\n                    {+address === +project.creator.id ? 'You' : `${project.creator.id.slice(0, 6)}…${project.creator.id.slice(-2)}`}\n                  </Link>\n                </h5>\n                <span className='small'>\n                  {new Date(project.createdAt * 1000).toLocaleDateString()}\n                </span>\n              </div>\n              <div className='label'>\n                <span>created the campaign</span>\n                <span className='small'></span>\n              </div>\n            </li>\n            {project.collection.receipts.map((r, i) => (\n              <li\n                ref={refs.current[i]}\n                data-index={i}\n                className='li donation'\n                style={{ opacity: chosen === i ? 1 : 0.5 }}\n                key={`${i}_${r.id}`}\n                onMouseOver={() => setIntersecting([i])}\n                onMouseOut={() => setIntersecting([])}\n              >\n                <div className='label'>\n                  <h5>\n                    <Link\n                      to={`/${chainId}/user/${r.donator.id.toLowerCase()}`}\n                      className='a plain'\n                    >\n                      {+address === +r.donator.id ? 'You' : `${r.donator.id.slice(0, 6)}…${r.donator.id.slice(-2)}`}\n                    </Link>\n                  </h5>\n                  <span className='small'>\n                    {new Date(r.timestamp * 1000).toLocaleDateString(undefined, { day: 'numeric', month: 'numeric' })}\n                  </span>\n                </div>\n                <div className='label'>\n                  <span>\n                    {' '}contributed <b>{r.amount} cUSD</b>\n                  </span>\n                  <span className='small'>\n                    &mdash;{' '}{r.donator.reports ? '(…)' : r.message}\n                  </span>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {!project || +address === +project.creator.id ? (\n        <div className='admin'>\n          {!mode ? (\n            <>\n              <button\n                disabled={!+toClaim}\n                className='button claim primary'\n                onClick={async () => {\n                  try {\n                    notificationVar('Please wait…')\n                    await contract.methods.claimProjectFunds(\n                      project.id\n                    ).send({ from: address, chainId: '0x' + Number(chainId).toString(16) })\n                    notificationVar('Funds successfully claimed!')\n                    const fetchClaimProjectFunds = async () => {\n                      const cached = client.readQuery({ query: PROJECT_INFO, variables: { projectId } })\n                      const cachedClaimedAmount = cached.project.claimedAmount\n                      const { data } = await refetch()\n                      if (cachedClaimedAmount === data.project.claimedAmount) {\n                        await new Promise(resolve => setTimeout(resolve, 2000))\n                        await fetchClaimProjectFunds()\n                      }\n                    }\n                    await fetchClaimProjectFunds()\n                    fetchBalance(cUSD)\n                  } catch (error) {\n                    console.error(error)\n                    notificationVar(error.message)\n                  }\n                }}\n              >\n                Claim {toClaim} cUSD\n              </button>\n              <button className='button' onClick={() => setMode('EDIT')}>\n                Edit\n              </button>\n            </>\n          ) : (\n            <>\n              {mode === 'EDIT' && (\n                <button onClick={() => setMode('')} className='button'>\n                  Cancel\n                </button>\n              )}\n              <button\n                disabled={(!project && !img.dataUrl) || !title.trim() || !description.trim() || amount < 10}\n                className='button primary'\n                onClick={async () => {\n                  try {\n                    let url = project?.image\n                    if (img.dataUrl) {\n                      const croppedImage = await getCroppedImg(img.dataUrl, croppedAreaPixels, 0)\n                      const { path } = await ipfs.add(await fetch(croppedImage).then(r => r.blob()))\n                      url = `https://ipfs.infura.io/ipfs/${path}`\n                    }\n                    notificationVar('Please confirm…')\n                    if (mode === 'CREATE') {\n                      client.query({ query: ALL_PROJECTS })\n                      await contract.methods.createProject(\n                        escapeHtml(title.trim()),\n                        description.trim(),\n                        ethers.utils.parseUnits(amount, 18),\n                        url,\n                      ).send({ from: address, chainId: '0x' + Number(chainId).toString(16) })\n                      notificationVar('Campaign successfully created!')\n                      const fetchCreateProject = async () => {\n                        const { data: cached } = await client.query({ query: ALL_PROJECTS })\n                        const cachedMyProjects = cached.projects.filter(p => +p.creator.id === +address).length\n                        const { data } = await client.query({ query: ALL_PROJECTS, fetchPolicy: 'network-only' })\n                        if (cachedMyProjects === data.projects.filter(p => +p.creator.id === +address).length) {\n                          await new Promise(resolve => setTimeout(resolve, 2000))\n                          await fetchCreateProject()\n                        }\n                      }\n                      await fetchCreateProject()\n                      navigate(`/${chainId}`)\n                    } else {\n                      await contract.methods.editProject(\n                        project.id,\n                        escapeHtml(title.trim()),\n                        description.trim(),\n                        url,\n                      ).send({ from: address, chainId: '0x' + Number(chainId).toString(16) })\n                      notificationVar('Project successfully updated!')\n                      const fetchEditProject = async () => {\n                        const cached = client.readQuery({ query: PROJECT_INFO, variables: { projectId } })\n                        const cachedUpdatedAt = cached.project.updatedAt\n                        const { data } = await refetch()\n                        if (cachedUpdatedAt === data.project.updatedAt) {\n                          await new Promise(resolve => setTimeout(resolve, 2000))\n                          await fetchEditProject()\n                        }\n                      }\n                      await fetchEditProject()\n                      setMode('')\n                    }\n                  } catch (error) {\n                    console.error(error)\n                    notificationVar(error.message)\n                  }\n                }}\n              >\n                {mode === 'CREATE' ? 'Create campaign' : 'Save'}\n              </button>\n            </>\n          )}\n        </div>\n      ) : (\n        <div className='contribute'>\n          <div className='h4'>\n            How can I help?\n            <span>\n              {totalPieces - percentage}{' '}\n              <Puzzle height={16} fill='rgba(97, 31, 105, 0.7)' strokeWidth={0} />\n              left\n            </span>\n          </div>\n          <main>\n            <div className='interact'>\n              <b>Give to this campaign</b>\n              <Select\n                contribution={contribution}\n                setContribution={setContribution}\n                percentage={percentage}\n                requested={requested}\n                totalPieces={totalPieces}\n              />\n              <div className='cta'>\n                <button\n                  className='button primary donate'\n                  disabled={\n                    isNaN(contribution) ||\n                    contribution <= 0 ||\n                    contribution > totalPieces - percentage\n                  }\n                  onClick={() => setModal('DONATE')}\n                >\n                  Donate now\n                </button>\n              </div>\n            </div>\n          </main>\n        </div>\n      )}\n      {!mode && (\n        <div className='contribute'>\n          <h5 className='h5'>Share this campaign</h5>\n          <div className='share'>\n            <button\n              onClick={() => {\n                navigator.clipboard.writeText(`${window.location.origin}/${chainId}/${project.id}`)\n                notificationVar('Copied to clipboard!')\n              }}\n              className='button secondary'\n            >Copy link</button>\n            {+address !== +project.creator.id && (\n              <Report userAddress={project?.creator.id} />\n            )}\n          </div>\n        </div>\n      )}\n      {modal === 'DONATE' && (\n        <aside className='overlay'>\n          <aside className='Modal'>\n            <div className='Modal__top'>\n              <h3 className='h5'>Are you sure?</h3>\n              <span>\n                Current balance: <b>{address ? balance : '…'} cUSD</b>\n              </span>\n            </div>\n            <div className='interact'>\n              <Select\n                contribution={contribution}\n                setContribution={setContribution}\n                percentage={percentage}\n                requested={requested}\n                totalPieces={totalPieces}\n              />\n            </div>\n            <textarea\n              className='textarea'\n              rows='3'\n              placeholder='Leave a message (optional)'\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n            />\n            {address && (\n              <div className='Modal__warning'>\n                {balance < contribution * requested / totalPieces\n                  ? <span>Uh-oh, your balance is not high enough :/</span>\n                  : (isNaN(contribution) || contribution <= 0)\n                    ? <span>Looks like it's not a valid amount :/</span>\n                    : contribution > totalPieces - percentage\n                      ? <span>Sorry, there is only {totalPieces - percentage} pieces left :/</span>\n                      : null}\n              </div>\n            )}\n            <div className='Modal__bottom'>\n              <button className='button' onClick={() => setModal('')}>\n                Back\n              </button>\n              {address ? (\n                <button\n                  className='button grow primary'\n                  disabled={\n                    balance < contribution * requested / totalPieces ||\n                    isNaN(contribution) ||\n                    contribution <= 0 ||\n                    contribution > totalPieces - percentage\n                  }\n                  onClick={async () => {\n                    try {\n                      notificationVar('Waiting for approval…')\n                      const donation = BigNumber.from(project.requestedAmount).mul(contribution).div(totalPieces)\n                      await cUSD.methods.approve(\n                        getContract(chainId),\n                        donation.toString(),\n                      ).send({ from: address, chainId: '0x' + Number(chainId).toString(16) })\n                      notificationVar('Please confirm…')\n                      await contract.methods.donateToProject(\n                        project.id,\n                        donation.toString(),\n                        escapeHtml(message),\n                      ).send({ from: address, chainId: '0x' + Number(chainId).toString(16) })\n                      notificationVar('Donation successfully sent!')\n                      const fetchDonateToProject = async () => {\n                        const cached = client.readQuery({ query: PROJECT_INFO, variables: { projectId } })\n                        const cachedMyDonations = cached.project.collection.receipts.filter(r => +r.donator.id === +address).length\n                        const { data } = await refetch()\n                        if (cachedMyDonations === data.project.collection.receipts.filter(r => +r.donator.id === +address).length) {\n                          await new Promise(resolve => setTimeout(resolve, 2000))\n                          await fetchDonateToProject()\n                        }\n                      }\n                      await fetchDonateToProject()\n                      setModal('')\n                      fetchBalance(cUSD)\n                    } catch (error) {\n                      console.error(error)\n                      notificationVar(error.message)\n                    }\n                  }}\n                >\n                  {balance < contribution * requested / totalPieces ||\n                    isNaN(contribution) ||\n                    contribution <= 0 ||\n                    contribution > totalPieces - percentage\n                  ? 'Give'\n                  : `Give ${(contribution * requested / totalPieces).toFixed(2)} cUSD`}\n                </button>\n              ) : (\n                <button className='button grow primary' onClick={connect}>\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </aside>\n        </aside>\n      )}\n    </div>\n  )\n}\n\nexport default ProjectInfo\n","import React, { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport { PROFILE, notificationVar } from '../graphql'\nimport { useContract } from '../utils'\nimport Project from '../components/Project'\nimport Report from '../components/Report'\n\nfunction Profile () {\n  const { chainId, userAddress } = useParams()\n  const { address, balance } = useContract(chainId)\n\n  const { data: { receipts = [], projects = [] } = {} } = useQuery(PROFILE, {\n    variables: { userAddress },\n    onError: error => notificationVar(error.message),\n  })\n  const [dataImgs, setDataImgs] = useState({})\n\n  useEffect(() => {\n    setTimeout(async () => {\n      if (window.ReactNativeWebView) {\n        for (const receipt of receipts) {\n          const blob = await fetch(receipt.project.image).then(r => r.blob())\n          const dataImg = await new Promise((resolve, reject) => {\n            const reader = new FileReader()\n            reader.onerror = reject\n            reader.onload = () => resolve(reader.result)\n            reader.readAsDataURL(blob)\n          })\n          setDataImgs(dataImgs => ({ ...dataImgs, [receipt.project.id]: dataImg }))\n        }\n      }\n    })\n  }, [ userAddress, receipts ])\n\n  return (\n    <div className='Profile'>\n      <div className='top'>\n        <h1>\n          {userAddress.slice(0, 6)}…{userAddress.slice(-2)}\n          {+userAddress !== +address && '’s'}\n        </h1>\n        {+userAddress !== +address ? (\n          <Report userAddress={userAddress} />\n        ) : (\n          <span>\n            Current balance:<br />\n            <b>{balance} cUSD</b>\n          </span>\n        )}\n      </div>\n      <div className='campaigns'>\n        <h2 className='h2'>\n          {+userAddress === +address ? 'Your campaigns' : 'Created campaigns'}\n          <span>({projects.length})</span>\n        </h2>\n        <div className='projects'>\n          {projects.map(p => (\n            <Project project={p} key={p.id} />\n          ))}\n          {+userAddress === +address && (\n            <Link to={`/${chainId}/new`} className='new'>\n              <div>\n                <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' height={18}><path fill='none' d='M0 0h24v24H0z'/><path fill='currentColor' d='M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z'/></svg>\n              </div>\n              <span>\n                Start a new campaign\n              </span>\n            </Link>\n          )}\n        </div>\n      </div>\n      <div className='contributions'>\n        <h2 className='h2'>\n          {+userAddress === +address ? 'Your contributions' : 'Public contributions'}\n          <span>({receipts.length})</span>\n        </h2>\n        <div className='projects'>\n          {receipts.map(p => {\n            const link = '/' + p.description?.split('/').slice(3).join('/')\n            return (\n              <Link to={link} className={`a Project plain ${+address === +p.creator && 'mine'}`} key={p.id}>\n                {!window.ReactNativeWebView\n                  ? <object data={p.image} type='image/svg+xml' className='object' aria-label={p.title} />\n                  : <img src={p.image.replace(p.project.image, dataImgs[p.project.id])} className='img image' alt={p.title} />}\n              </Link>\n            )\n          })}\n          {+userAddress === +address && (\n            <Link to={`/${chainId}`} className='new'>\n              <div>\n                <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' height={16}><path fill='none' d='M0 0H24V24H0z'/><path fill='currentColor' d='M6 3c3.49 0 6.383 2.554 6.913 5.895C14.088 7.724 15.71 7 17.5 7H22v2.5c0 3.59-2.91 6.5-6.5 6.5H13v5h-2v-8H9c-3.866 0-7-3.134-7-7V3h4zm14 6h-2.5c-2.485 0-4.5 2.015-4.5 4.5v.5h2.5c2.485 0 4.5-2.015 4.5-4.5V9zM6 5H4v1c0 2.761 2.239 5 5 5h2v-1c0-2.761-2.239-5-5-5z'/></svg>\n              </div>\n              <span>\n                Explore projects\n              </span>\n            </Link>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom'\nimport App from './App'\nimport Explorer from './pages/Explorer'\nimport ProjectInfo from './pages/ProjectInfo'\nimport Profile from './pages/Profile'\n\nconst container = document.getElementById('root')\nconst root = createRoot(container)\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path='/'>\n          <Route index element={<Navigate to='/42220' replace />} />\n          <Route path=':chainId' element={<App />}>\n            <Route index element={<Explorer />} />\n            <Route path='new' element={<ProjectInfo create />} />\n            <Route path=':projectId' element={<ProjectInfo />} />\n            <Route path='user/:userAddress' element={<Profile />} />\n          </Route>\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n)\n"],"sourceRoot":""}