{"version":3,"sources":["graphql.js","utils/index.js","components/Header.jsx","App.jsx","components/Project.jsx","pages/Explorer.jsx","assets/puzzle.svg","components/Select.jsx","utils/cropImage.js","components/Report.jsx","pages/ProjectInfo.jsx","pages/Profile.jsx","index.js"],"names":["notificationVar","makeVar","createClient","chainId","ApolloClient","uri","cache","InMemoryCache","typePolicies","Query","fields","notification","read","ALL_PROJECTS","gql","PROJECT_INFO","PROFILE","getContract","contractAddresses","getNetwork","name","rpcUrl","explorer","ipfs","ipfsHttpClient","useContract","useCelo","address","kit","useState","contract","setContract","cUSD","setCUSD","balance","setBalance","fetchBalance","erc20","a","methods","balanceOf","call","parseFloat","ethers","utils","formatUnits","toFixed","useEffect","window","connection","web3","eth","Contract","abi","usdTokenAddress","then","CUSD","event","setImg","selectedFile","target","files","reader","FileReader","img","document","createElement","className","width","height","title","body","appendChild","ditherjs","DitherJS","step","palette","algorithm","onload","dither","canvas","querySelector","ctx","getContext","imgData","getImageData","i","data","length","canvas1","ctx1","putImageData","toDataURL","Promise","resolve","toBlob","dataUrl","blob","src","result","readAsDataURL","Header","connect","network","destroy","useReactiveVar","to","location","pathname","includes","onClick","App","useParams","dapp","description","url","ApolloProvider","client","Project","project","percentage","BigNumber","from","fundedAmount","mul","div","requestedAmount","toNumber","id","image","alt","style","Explorer","_path","useQuery","onError","error","message","projects","map","p","_excluded","_extends","Object","assign","bind","arguments","source","key","prototype","hasOwnProperty","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPuzzle","_ref","svgRef","titleId","props","viewBox","fill","xmlns","ref","d","stroke","ForwardRef","Select","contribution","setContribution","requested","totalPieces","c","disabled","inputMode","onChange","e","value","min","createImage","reject","Image","addEventListener","setAttribute","getRadianAngle","degreeValue","Math","PI","rotateSize","rotation","rotRad","abs","cos","sin","getCroppedImg","imageSrc","pixelCrop","flip","horizontal","vertical","bBoxWidth","bBoxHeight","translate","rotate","scale","drawImage","x","y","file","URL","createObjectURL","Report","userAddress","modal","setModal","useRef","rows","placeholder","reportUser","current","send","console","ProjectInfo","create","projectId","navigate","useNavigate","variables","skip","refetch","mode","setMode","intersecting","setIntersecting","refs","Array","React","createRef","amount","setAmount","setTitle","setDescription","setMessage","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","observer","IntersectionObserver","isIntersecting","dataset","index","filter","rootMargin","forEach","observe","disconnect","toClaim","sub","claimedAmount","funded","receiptsNb","collection","receipts","ranges","reduce","acc","curr","chosen","position","aspectRatio","zIndex","aspect","onCropChange","onCropComplete","_","objectFit","onZoomChange","href","matchAll","m","owner","findIndex","clipPath","match","opacity","transition","htmlFor","type","onFileSelected","accept","donators","onMouseOver","onMouseOut","creator","toLowerCase","slice","Date","createdAt","toLocaleDateString","r","donator","timestamp","undefined","day","month","reports","color","strokeWidth","isNaN","trim","croppedImage","fetch","add","path","createProject","parseUnits","fetchCreateProject","cached","readQuery","query","cachedMyProjects","setTimeout","editProject","fetchEditProject","cachedUpdatedAt","updatedAt","claimProjectFunds","fetchClaimProjectFunds","cachedClaimedAmount","navigator","clipboard","writeText","origin","donation","log","toString","approve","donateToProject","fetchDonateToProject","cachedMyDonations","Profile","dataImgs","setDataImgs","ReactNativeWebView","receipt","onerror","dataImg","link","split","join","replace","container","getElementById","createRoot","render","StrictMode","element"],"mappings":"8SAEaA,EAAkBC,YAAQ,IAE1BC,EAAe,SAAAC,GAAO,OAAI,IAAIC,IAAa,CACtDC,IAAiB,SAAZF,EACD,0DACA,6DACJG,MAAO,IAAIC,IAAc,CACvBC,aAAc,CACZC,MAAO,CACLC,OAAQ,CACNC,aAAc,CAAEC,KAAM,kBAAMZ,cAOzBa,EAAeC,YAAH,+ZA4BZC,EAAeD,YAAH,ynBAuCZE,EAAUF,YAAH,sf,+FC7EPG,EAAc,SAAAd,GAAO,OAAIe,EAAkBf,IAE3CgB,EAAa,SAAAhB,GAAO,MAAK,CACpC,KAAM,CACJiB,KAAM,YACNC,OAAQ,yBAEV,MAAO,CACLD,KAAM,YACNC,OAAQ,2CACRC,SAAU,iDAEZ,MAAO,CACLF,KAAM,OACNC,OAAQ,yBACRC,SAAU,8BAEXnB,IAEUoB,EAAOC,iBAAe,sCAEtBC,EAAc,SAACtB,GAC1B,MAAyBuB,oBAAjBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IACjB,EAAkCC,mBAAS,MAA3C,mBAAQC,EAAR,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,MAAnC,mBAAQG,EAAR,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,MAAzC,mBAAQK,EAAR,KAAiBC,EAAjB,KAEMC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACGD,EAAME,QAAQC,UAAUb,GAASc,OADpC,OACbP,EADa,OAEnBC,EAAWO,WAAWC,IAAOC,MAAMC,YAAYX,EAAS,KAAKY,QAAQ,IAFlD,2CAAH,sDAyBlB,OApBAC,qBAAU,WACJpB,IACFqB,OAAOlB,SAAW,IAAIF,EAAIqB,WAAWC,KAAKC,IAAIC,SAjCxBA,EAASC,IAmC7BpC,EAAYd,IAEd4B,EAAYiB,OAAOlB,UACnBkB,OAAOlB,SAASS,QAAQe,kBACtBb,OAAOc,MAAK,SAAAD,GACZ,IAAMtB,EAAO,IAAIJ,EAAIqB,WAAWC,KAAKC,IAAIC,SACvCI,EAAKH,IACLC,GAEFlB,EAAaJ,GACbC,EAAQD,SAGX,CAAEL,IAGE,CAAEA,UAASG,WAAUI,UAASF,OAAMI,iB,4CAGtC,WAA+BqB,EAAOC,GAAtC,qBAAApB,EAAA,yDACDqB,EAAeF,EAAMG,OAAOC,MAAM,GAClCC,EAAS,IAAIC,WACZJ,EAHA,kDAKCK,EAAMC,SAASC,cAAc,QAC/BC,UAAY,MAChBH,EAAII,MAAQ,IACZJ,EAAIK,OAAS,IACbL,EAAIM,MAAQX,EAAavC,KACzB6C,SAASM,KAAKC,YAAYR,GAEpBS,EAAW,IAAIC,IAAS,CAC5BC,KAAM,EACNC,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,IAAK,IAAK,MAChCC,UAAW,aAEbf,EAAOgB,OAAS,SAAUrB,GACxBO,EAAIc,OAAJ,sBAAa,sCAAAxC,EAAA,sDAKX,IAJAmC,EAASM,OAAOf,GACVgB,EAASf,SAASgB,cAAc,qBAChCC,EAAMF,EAAOG,WAAW,MACxBC,EAAUF,EAAIG,aAAa,EAAG,EAAGL,EAAOZ,MAAOY,EAAOX,QACnDiB,EAAI,EAAGA,EAAIF,EAAQG,KAAKC,OAAQF,GAAK,EACxCF,EAAQG,KAAKD,EAAI,IACnBF,EAAQG,KAAKD,EAAI,GAAK,IACtBF,EAAQG,KAAKD,EAAI,GAAK,IACtBF,EAAQG,KAAKD,EAAI,GAAK,KAEtBF,EAAQG,KAAKD,EAAI,GAAK,GACtBF,EAAQG,KAAKD,EAAI,GAAK,GACtBF,EAAQG,KAAKD,EAAI,GAAK,KAbf,OAgBLG,EAAUxB,SAASC,cAAc,WAC/BC,UAAY,SACduB,EAAOD,EAAQN,WAAW,MAChCM,EAAQrB,MAAQY,EAAOZ,MACvBqB,EAAQpB,OAASW,EAAOX,OACxBqB,EAAKC,aAAaP,EAAS,EAAG,GArBnB,KAsBX1B,EAtBW,KAuBA+B,EAAQG,YAvBR,UAwBG,IAAIC,SAAQ,SAAAC,GAAO,OAAIL,EAAQM,OAAOD,MAxBzC,yBAyBFL,EAAQrB,MAzBN,KA0BDqB,EAAQpB,OA1BP,MAuBT2B,QAvBS,KAwBTC,KAxBS,KAyBT7B,MAzBS,KA0BTC,OA1BS,iEA6BbL,EAAIkC,IAAMzC,EAAMG,OAAOuC,QAEzBrC,EAAOsC,cAAczC,GAjDhB,6C,2CC1BQ0C,MAhCf,WACE,MAA+C3E,oBAAvC4E,EAAR,EAAQA,QAAS3E,EAAjB,EAAiBA,QAAS4E,EAA1B,EAA0BA,QAASC,EAAnC,EAAmCA,QAC7B7F,EAAe8F,YAAezG,GACpC,OACE,qCACE,yBAAQmE,UAAU,SAAlB,UACE,eAAC,IAAD,CAAMuC,GAAG,GAAGvC,UAAU,eAAtB,UACE,oBAAIA,UAAU,KAAd,mBACA,sBAAMA,UAAU,UAAhB,SAA2BoC,EAAQnF,UAEpCO,EACC,mCACCqB,OAAO2D,SAASC,SAASC,SAAS,SAAWlF,GAC5C,wBAAQwC,UAAU,IAAI2C,QAASN,EAA/B,qBAEA,cAAC,IAAD,CAAME,GAAE,eAAU/E,GAAWwC,UAAU,IAAvC,0BAIF,wBAAQA,UAAU,IAAI2C,QAASR,EAA/B,+BAGH3F,GACC,sBAAKwD,UAAU,UAAf,UACE,+BAAOxD,IACP,wBAAQwD,UAAU,IAAI2C,QAAS,kBAAM9G,EAAgB,KAArD,sB,gBCGK+G,MAxBf,WACE,IAAQ5G,EAAY6G,cAAZ7G,QACR,OACE,cAAC,eAAD,CACE8G,KAAM,CACJ7F,KAAM,QACN8F,YAAa,cACbC,IAAK,oBAEPZ,QAAO,2BACFpF,EAAWhB,IADT,IAELA,SAAUA,IARd,SAWE,cAACiH,EAAA,EAAD,CAAgBC,OAAQnH,EAAaC,GAArC,SACE,iCACE,cAAC,EAAD,IACA,cAAC,IAAD,Y,kBCFKmH,EAtBC,SAAC,GAAiB,IAAD,IAAdC,EAAc,EAAdA,QACTpH,EAAY6G,cAAZ7G,QACFqH,EAAU,WAAG,EAAAC,IAAUC,KAAKH,EAAQI,eAAcC,WAAxC,aAAG,SAA2C,KAAKC,IAAIN,EAAQO,iBAAiBC,WAChG,OACE,eAAC,IAAD,CAAMrB,GAAE,WAAMvG,EAAN,YAAiBoH,EAAQS,IAAM7D,UAAU,UAAjD,UACE,qBAAKA,UAAU,YAAY+B,IAAKqB,EAAQU,MAAOC,IAAI,KACnD,sBAAK/D,UAAU,UAAf,UACE,qBAAKA,UAAU,QAAf,SACE,oBAAIA,UAAU,KAAd,SAAoBoD,EAAQjD,UAE9B,mBAAGH,UAAU,cAAb,SAA4BoD,EAAQL,cACpC,qBAAK/C,UAAU,SAAf,SACE,gCACE,qBAAKA,UAAU,WAAf,SAA0B,qBAAKgE,MAAO,CAAE/D,MAAOoD,EAAa,SAC5D,uBAAMrD,UAAU,UAAhB,UAA2BqD,EAA3B,eAAkD,8BAAI9E,WAAWC,IAAOC,MAAMC,YAAY0E,EAAQO,gBAAiB,KAAKhF,QAAQ,GAA9E,0BCI/CsF,ICrBXC,EDqBWD,EAhBf,WACE,MAAyCE,YAASzH,EAAc,CAC9D0H,QAAS,SAAAC,GAAK,OAAIxI,EAAgBwI,EAAMC,YADlClD,KAAR,gBAAkC,GAAlC,GAAgBmD,gBAAhB,MAA2B,GAA3B,EAGA,OACE,sBAAKvE,UAAU,WAAf,UACE,oBAAIA,UAAU,KAAd,2BACA,qBAAKA,UAAU,WAAf,SACGuE,EAASC,KAAI,SAACC,EAAGtD,GAAJ,OACZ,cAAC,EAAD,CAASiC,QAASqB,GAAQA,EAAEZ,a,QCZlCa,EAAY,CAAC,QAAS,WAE1B,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUrF,GAAU,IAAK,IAAI0B,EAAI,EAAGA,EAAI4D,UAAU1D,OAAQF,IAAK,CAAE,IAAI6D,EAASD,UAAU5D,GAAI,IAAK,IAAI8D,KAAOD,EAAcJ,OAAOM,UAAUC,eAAe7G,KAAK0G,EAAQC,KAAQxF,EAAOwF,GAAOD,EAAOC,IAAY,OAAOxF,GAAkBkF,EAASS,MAAMC,KAAMN,WAEtU,SAASO,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkEC,EAAK9D,EAAnE1B,EAEzF,SAAuCuF,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DC,EAAK9D,EAA5D1B,EAAS,GAAQ+F,EAAaZ,OAAOa,KAAKT,GAAqB,IAAK7D,EAAI,EAAGA,EAAIqE,EAAWnE,OAAQF,IAAO8D,EAAMO,EAAWrE,GAAQoE,EAASG,QAAQT,IAAQ,IAAaxF,EAAOwF,GAAOD,EAAOC,IAAQ,OAAOxF,EAFxMkG,CAA8BX,EAAQO,GAAuB,GAAIX,OAAOgB,sBAAuB,CAAE,IAAIC,EAAmBjB,OAAOgB,sBAAsBZ,GAAS,IAAK7D,EAAI,EAAGA,EAAI0E,EAAiBxE,OAAQF,IAAO8D,EAAMY,EAAiB1E,GAAQoE,EAASG,QAAQT,IAAQ,GAAkBL,OAAOM,UAAUY,qBAAqBxH,KAAK0G,EAAQC,KAAgBxF,EAAOwF,GAAOD,EAAOC,IAAU,OAAOxF,EAMne,SAASsG,EAAUC,EAAMC,GACvB,IAAI9F,EAAQ6F,EAAK7F,MACb+F,EAAUF,EAAKE,QACfC,EAAQb,EAAyBU,EAAMtB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtDyB,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKN,EACL,kBAAmBC,GAClBC,GAAQhG,EAAqB,gBAAoB,QAAS,CAC3D0D,GAAIqC,GACH/F,GAAS,KAAM+D,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EsC,EAAG,wPACHC,OAAQ,mBAIZ,IAAIC,GAA0B,aAAiBX,GCFhCY,IDGA,IC9BA,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,gBAAiBxD,EAAlC,EAAkCA,WAAYyD,EAA9C,EAA8CA,UAAWC,EAAzD,EAAyDA,YAAzD,OACb,qCACE,wBACE/G,UAAU,eACV2C,QAAS,kBAAMkE,GAAgB,SAACG,GAAD,OAAQA,EAAI,MAC3CC,SAAUL,GAAgB,EAH5B,eAKA,uBACE5G,UAAU,QACV/C,KAAK,SACLiK,UAAU,UACVC,SAAU,SAACC,GAAD,OAAOP,EAAgBO,EAAE3H,OAAO4H,QAC1CA,MAAOT,EACPU,IAAK,IAEP,cAAC,GAAD,CAAQrH,MAAO,GAAIC,OAAQ,KAC3B,wBACEF,UAAU,cACV2C,QAAS,kBAAMkE,GAAgB,SAACG,GAAD,OAAQA,EAAI,MAC3CC,SAAUL,GAAgBG,EAAc1D,EAH1C,eAKA,qCACIuD,EAAe,EAAf,WAAwBA,EAAeE,EAAaC,GAAapI,QAAQ,GAAzE,SAAqF,SADzF,Y,UCvBS4I,GAAc,SAACvE,GAAD,OACzB,IAAItB,SAAQ,SAACC,EAAS6F,GACpB,IAAM1D,EAAQ,IAAI2D,MAClB3D,EAAM4D,iBAAiB,QAAQ,kBAAM/F,EAAQmC,MAC7CA,EAAM4D,iBAAiB,SAAS,SAACrD,GAAD,OAAWmD,EAAOnD,MAClDP,EAAM6D,aAAa,cAAe,aAClC7D,EAAM/B,IAAMiB,MAGT,SAAS4E,GAAeC,GAC7B,OAAQA,EAAcC,KAAKC,GAAM,IAM5B,SAASC,GAAW/H,EAAOC,EAAQ+H,GACxC,IAAMC,EAASN,GAAeK,GAE9B,MAAO,CACLhI,MACE6H,KAAKK,IAAIL,KAAKM,IAAIF,GAAUjI,GAAS6H,KAAKK,IAAIL,KAAKO,IAAIH,GAAUhI,GACnEA,OACE4H,KAAKK,IAAIL,KAAKO,IAAIH,GAAUjI,GAAS6H,KAAKK,IAAIL,KAAKM,IAAIF,GAAUhI,IAOxD,SAAeoI,GAA9B,qC,8CAAe,WACbC,EACAC,GAFa,6CAAArK,EAAA,6DAGb8J,EAHa,+BAGF,EACXQ,EAJa,+BAIN,CAAEC,YAAY,EAAOC,UAAU,GAJzB,SAMOpB,GAAYgB,GANnB,UAMPzE,EANO,OAOPjD,EAASf,SAASC,cAAc,UAChCgB,EAAMF,EAAOG,WAAW,MARjB,yCAWJ,MAXI,cAcPkH,EAASN,GAAeK,GAdjB,EAiBoCD,GAC/ClE,EAAM7D,MACN6D,EAAM5D,OACN+H,GAHaW,EAjBF,EAiBL3I,MAA0B4I,EAjBrB,EAiBa3I,OAO1BW,EAAOZ,MAAQ2I,EACf/H,EAAOX,OAAS2I,EAGhB9H,EAAI+H,UAAUF,EAAY,EAAGC,EAAa,GAC1C9H,EAAIgI,OAAOb,GACXnH,EAAIiI,MAAMP,EAAKC,YAAc,EAAI,EAAGD,EAAKE,UAAY,EAAI,GACzD5H,EAAI+H,WAAWhF,EAAM7D,MAAQ,GAAI6D,EAAM5D,OAAS,GAGhDa,EAAIkI,UAAUnF,EAAO,EAAG,GAIlB1C,EAAOL,EAAIG,aACfsH,EAAUU,EACVV,EAAUW,EACVX,EAAUvI,MACVuI,EAAUtI,QAIZW,EAAOZ,MAAQuI,EAAUvI,MACzBY,EAAOX,OAASsI,EAAUtI,OAG1Ba,EAAIS,aAAaJ,EAAM,EAAG,GAlDb,kBAwDN,IAAIM,SAAQ,SAACC,EAAS6F,GAC3B3G,EAAOe,QAAO,SAACwH,GACbzH,EAAQ0H,IAAIC,gBAAgBF,MAC3B,kBA3DQ,4C,yBCzBf,IAgDeG,GAhDA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACRxN,EAAY6G,cAAZ7G,QACR,EAA8BsB,EAAYtB,GAAlCwB,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,SACjB,EAA0BD,oBAAS,GAAnC,mBAAO+L,EAAP,KAAcC,EAAd,KACMnD,EAAMoD,mBACZ,OACE,qCACa,WAAVF,GACC,uBAAOzJ,UAAU,UAAjB,SACE,wBAAOA,UAAU,QAAjB,UACE,qBAAKA,UAAU,aAAf,SACE,qEAEF,0BAAUuG,IAAKA,EAAKvG,UAAU,WAAW4J,KAAK,IAAIC,YAAY,2BAC9D,sBAAK7J,UAAU,gBAAf,UACE,wBACEA,UAAU,sBACV2C,QAAO,sBAAE,sBAAAxE,EAAA,sEAELtC,EAAgB,wBAFX,SAGC8B,EAASS,QAAQ0L,WACrBN,EACAjD,EAAIwD,QAAQ1C,OACZ2C,KAAK,CAAEzG,KAAM/F,IANV,OAOL3B,EAAgB,kBAChB6N,EAAS,IARJ,gDAULO,QAAQ5F,MAAR,MACAxI,EAAgB,KAAMyI,SAXjB,yDAFX,oBAmBA,wBAAQtE,UAAU,cAAc2C,QAAS,kBAAM+G,EAAS,KAAxD,0BAOR,sBAAK/G,QAAS,kBAAM+G,EAAS,WAAW1J,UAAU,cAAcE,OAAQ,GAAIoG,MAAM,6BAA6BF,QAAQ,YAAvH,UACE,sBAAMC,KAAK,OAAOG,EAAE,kBAAiB,sBAAMH,KAAK,eAAeG,EAAE,8JCsd1D0D,OAvff,YAA2C,IAAD,YAAlBC,cAAkB,SACxC,EAA+BtH,cAAvB7G,EAAR,EAAQA,QAASoO,EAAjB,EAAiBA,UACXC,EAAWC,cACTnI,EAAY5E,oBAAZ4E,QACR,EAA2D7E,EAAYtB,GAA/DwB,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,SAAUI,EAA3B,EAA2BA,QAASF,EAApC,EAAoCA,KAAMI,EAA1C,EAA0CA,aAE1C,EAAoDkG,YAASvH,EAAc,CACzE2N,UAAW,CAAEH,aACbhG,QAAS,SAAAC,GAAK,OAAIxI,EAAgBwI,EAAMC,UACxCkG,KAAML,IAHR,IAAQ/I,KAAQgC,GAAhB,aAA4B,GAA5B,GAAgBA,QAAgBqH,EAAhC,EAAgCA,QAASvH,EAAzC,EAAyCA,OAMzC,EAA4BxF,mBAAS,IAArC,mBAAQ+L,EAAR,KAAeC,EAAf,KACA,EAA0BhM,mBAASyM,EAAS,SAAW,IAAvD,mBAAQO,EAAR,KAAcC,EAAd,KACA,EAA0CjN,mBAAS,IAAnD,mBAAQkN,EAAR,KAAsBC,GAAtB,KACMC,GAAOnB,iBAAO,YAAKoB,MAAM,MAAOvG,KAAI,kBAAMwG,IAAMC,gBACtD,GAA0CvN,mBAAS,GAAnD,qBAAQkJ,GAAR,MAAsBC,GAAtB,MAEA,GAAsBnJ,mBAAS,IAA/B,qBAAOmC,GAAP,MAAYN,GAAZ,MACA,GAA8B7B,mBAAS,IAAvC,qBAAQwN,GAAR,MAAgBC,GAAhB,MACA,GAA4BzN,mBAAS,IAArC,qBAAQyC,GAAR,MAAeiL,GAAf,MACA,GAAwC1N,mBAAS,IAAjD,qBAAQqF,GAAR,MAAqBsI,GAArB,MACA,GAAgC3N,mBAAS,IAAzC,qBAAQ4G,GAAR,MAAiBgH,GAAjB,MACA,GAAwB5N,mBAAS,CAAEwL,EAAG,EAAGC,EAAG,IAA5C,qBAAOoC,GAAP,MAAaC,GAAb,MACA,GAAwB9N,mBAAS,GAAjC,qBAAO+N,GAAP,MAAaC,GAAb,MACA,GAAkDhO,mBAAS,MAA3D,qBAAOiO,GAAP,MAA0BC,GAA1B,MAyBA,GAvBAhN,qBAAU,WACR,GAAIwE,EAAS,CACPA,EAAQI,eAAiBJ,EAAQO,iBACnCkD,GAAgB,GAElBsE,GAAU5M,WAAWC,IAAOC,MAAMC,YAAY0E,EAAQO,gBAAiB,KAAKhF,QAAQ,IACpFyM,GAAShI,EAAQjD,OACjBkL,GAAejI,EAAQL,aACvB,IAAM8I,EAAW,IAAIC,sBACnB,YAAmC,IAAD,sBAA9BC,EAA8B,EAA9BA,eAAgBtM,EAAc,EAAdA,OAEhBoL,GADEkB,EACc,SAAC7C,GAAD,4BAAWA,GAAX,EAAezJ,EAAOuM,QAAQC,SAE9B,SAAC/C,GAAD,OAAOA,EAAEgD,QAAO,SAAC/K,GAAD,OAAOA,KAAO1B,EAAOuM,QAAQC,aAGjE,CAAEE,WAAY,SAGhB,OADArB,GAAKf,QAAQqC,SAAQ,SAAC7F,GAAD,OAASA,EAAIwD,SAAW8B,EAASQ,QAAQ9F,EAAIwD,YAC3D,kBAAM8B,EAASS,iBAEvB,CAAElJ,KAEAA,IAAYsH,EAAM,OAAO,KAE9B,IAAM3D,GAA0B,SAAZ/K,EAAqB,GAAK,IACxCqH,GAAaD,IAAO,WAAI,EAAAE,IAAUC,KAAKH,EAAQI,eAAcC,WAAzC,aAAI,SAA2CsD,IAAarD,IAAIN,EAAQO,iBAAiBC,YAC7G2I,GAAUnJ,GAAW7E,WAAWC,IAAOC,MAAMC,aAAY,aAAA4E,IAAUC,KAAKH,EAAQI,eAAcgJ,WAArC,sBAA2CpJ,EAAQqJ,iBAAkB,EAAG,KAAK9N,QAAQ,GAC9I+N,GAAStJ,GAAW7E,WAAWC,IAAOC,MAAMC,YAAY0E,EAAQI,aAAc,KAAK7E,QAAQ,GAC3FmI,GAAY1D,GAAW7E,WAAWC,IAAOC,MAAMC,YAAY0E,EAAQO,gBAAiB,KAAKhF,QAAQ,GAEjGgO,GAAavJ,GAAWA,EAAQwJ,WAAWC,SAASxL,OACpDyL,GAAS1J,GAAWA,EAAQwJ,WAAWC,SAASE,QAAO,SAACC,EAAKC,GAAN,4BACxDD,GADwD,EAClDA,EAAIA,EAAI3L,OAAS,IAAM,GAAM4L,EAAK/B,OAASpE,GAAaC,OAChE,IACGmG,GAAS9J,GAAWwH,EAAaA,EAAavJ,OAAS,GAE7D,OACE,sBAAKrB,UAAU,cAAf,UACI0K,EAiCA,uBAAO1K,UAAU,YAAjB,SACE,qBAAKgE,MAAO,CAAEmJ,SAAU,WAAYC,YAAa,SAAUC,OAAQ,GAAnE,SACE,cAAC,KAAD,CACEvJ,MAAOjE,GAAIgC,UAAJ,OAAeuB,QAAf,IAAeA,OAAf,EAAeA,EAASU,OAC/BwJ,OAAQ,GAAK,EACb/B,KAAMA,GACNgC,aAAc/B,GACdgC,eAAgB,SAACC,EAAG9B,GAAJ,OAA0BC,GAAqBD,IAC/D+B,UAAW7N,GAAII,MAAQJ,GAAIK,OAAS,GAAK,EAAI,mBAAqB,iBAClEuL,KAAMA,GACNkC,aAAcjC,SA1CpBtI,EAAQwJ,WAAWC,SAASxL,OAC1B,sBAAKrB,UAAU,MAAMoG,QAAQ,cAA7B,UACE,+BACE,uBAAOvC,GAAG,IAAI+J,KAAMxK,EAAQU,MAAO7D,MAAM,MAAMC,OAAO,UAEvD,YAAKkD,EAAQwJ,WAAWC,SAASF,GAAa,GAAG7I,MAAM+J,SAAS,gBAAiBrJ,KAAI,SAACsJ,EAAG3M,GACxF,IAAM4M,EAAQjB,GAAOkB,WAAU,SAAC9E,GAAD,OAAO/H,EAAI+H,KAC1C,OACE,qBAEE0E,KAAK,KACLK,SAAUH,EAAE,GAAGI,MAAM,qBAAqB,GAC1CC,QACEjB,IAAU,EACNA,KAAWa,EACT,EACAA,GAAS,EACP,GACA,GAEF,EAGR/J,MAAO,CAAEoK,WAAY,SAdhB,MAAQjN,SAoBrB,qBAAKY,IAAKqB,EAAQU,MAAOC,IAAI,KAkBjC,sBAAK/D,UAAU,OAAf,UACG0K,GACC,sBAAK1K,UAAU,SAAf,UACE,wBAAOA,UAAU,0BAA0BqO,QAAQ,QAAnD,UACIxO,GAAIK,QAAJ,OAAckD,QAAd,IAAcA,KAASU,MAAS,UAAY,SADhD,SAEE,uBAAOD,GAAG,QAAQ7D,UAAU,QAAQsO,KAAK,OAAOrR,KAAK,QAAQkK,SAAU,SAAAC,GAAC,OTrE/E,SAAP,oCSqE0FmH,CAAenH,EAAG7H,KAASiP,OAAO,eAEhH,sBAAMxO,UAAU,YAAhB,SACE,uBACEA,UAAU,QACV/C,KAAK,YACLqR,KAAK,SACL9N,KAAK,IACL8G,IAAI,KACJuC,YAAY,MACZ3C,UAAU,UACVD,SAAUH,GACVO,MAAO6D,GACP/D,SAAU,SAAAC,GAAC,OAAI+D,GAAU/D,EAAE3H,OAAO4H,eAKxCqD,EAKA,0BACE1K,UAAU,oBACV/C,KAAK,QACL4M,YAAY,qBACZD,KAAK,IACLvC,MAAOlH,GACPgH,SAAU,SAAAC,GAAC,OAAIgE,GAAShE,EAAE3H,OAAO4H,UAVnC,oBAAIrH,UAAU,KAAd,SACE,+BAAOoD,EAAQjD,WAYjBuK,GACA,sBAAK1K,UAAU,UAAf,UACE,uBAAMA,UAAU,UAAhB,UACE,8BAAI0M,GAAJ,WADF,aACgC,4BAAI5F,QAEpC,uCACK,8BAAI1D,EAAQqL,SAASpN,OAArB,qBAIPqJ,EAKA,0BACE1K,UAAU,oBACV/C,KAAK,cACL4M,YAAY,oCACZD,KAAK,KACLvC,MAAOtE,GACPoE,SAAU,SAAAC,GAAC,OAAIiE,GAAejE,EAAE3H,OAAO4H,UAVxC,mBAAGrH,UAAU,cAAb,SACC,+BAAOoD,EAAQL,oBAanB2H,GACA,sBAAK1K,UAAU,WAAf,UACE,sBAAKA,UAAU,KAAf,4BACkBoD,EAAQwJ,WAAWC,SAASxL,OAD9C,IAEE,iCAAO,IAAMgC,GAAa0D,GAA1B,iBAEF,qBAAI/G,UAAU,KAAd,UACE,qBACEA,UAAU,KACVuG,IAAKuE,GAAKf,QAAQ,KAClB,aAAY,IACZ/F,MAAO,CAAEmK,QAAoB,MAAXjB,GAAiB,EAAI,IACvCwB,YAAa,kBAAM7D,GAAgB,CAAC,OACpC8D,WAAY,kBAAM9D,GAAgB,KANpC,UAQE,sBAAK7K,UAAU,QAAf,UACE,6BACE,cAAC,IAAD,CAAMuC,GAAE,WAAMvG,EAAN,iBAAsBoH,EAAQwL,QAAQ/K,GAAGgL,eAAiB7O,UAAU,UAA5E,UACIxC,KAAa4F,EAAQwL,QAAQ/K,GAAK,MAAnC,UAA8CT,EAAQwL,QAAQ/K,GAAGiL,MAAM,EAAG,GAA1E,iBAAgF1L,EAAQwL,QAAQ/K,GAAGiL,OAAO,QAG/G,sBAAM9O,UAAU,QAAhB,SACG,IAAI+O,KAAyB,IAApB3L,EAAQ4L,WAAkBC,0BAGxC,sBAAKjP,UAAU,QAAf,UACE,wDACA,sBAAMA,UAAU,gBAGnBoD,EAAQwJ,WAAWC,SAASrI,KAAI,SAAC0K,EAAG/N,GAAJ,OAC/B,qBACEoF,IAAKuE,GAAKf,QAAQ5I,GAClB,aAAYA,EACZnB,UAAU,cACVgE,MAAO,CAAEmK,QAASjB,KAAW/L,EAAI,EAAI,IAErCuN,YAAa,kBAAM7D,GAAgB,CAAC1J,KACpCwN,WAAY,kBAAM9D,GAAgB,KAPpC,UASE,sBAAK7K,UAAU,QAAf,UACE,6BACE,cAAC,IAAD,CACEuC,GAAE,WAAMvG,EAAN,iBAAsBkT,EAAEC,QAAQtL,GAAGgL,eACrC7O,UAAU,UAFZ,UAIIxC,KAAa0R,EAAEC,QAAQtL,GAAK,MAA7B,UAAwCqL,EAAEC,QAAQtL,GAAGiL,MAAM,EAAG,GAA9D,iBAAoEI,EAAEC,QAAQtL,GAAGiL,OAAO,QAG7F,sBAAM9O,UAAU,QAAhB,SACG,IAAI+O,KAAmB,IAAdG,EAAEE,WAAkBH,wBAAmBI,EAAW,CAAEC,IAAK,UAAWC,MAAO,iBAGzF,sBAAKvP,UAAU,QAAf,UACE,iCACG,IADH,eACmB,8BAAIkP,EAAEhE,OAAN,cAEnB,uBAAMlL,UAAU,QAAhB,mBACU,IAAKkP,EAAEC,QAAQK,QAAU,WAAQN,EAAE5K,gBA3BjD,UAKUnD,EALV,YAKe+N,EAAErL,cA8BvBT,IAAY5F,KAAa4F,EAAQwL,QAAQ/K,GAyGzC,sBAAK7D,UAAU,aAAf,UACE,sBAAKA,UAAU,KAAf,4BAEE,iCACG+G,GAAc1D,GAAY,IAC3B,cAAC,GAAD,CAAQpD,MAAO,GAAIC,OAAQ,GAAImG,KAAK,yBAAyBoJ,MAAM,uBAAuBC,YAAa,KAFzG,aAMF,+BACE,sBAAK1P,UAAU,WAAf,UACE,sDACA,cAAC,GAAD,CACE4G,aAAcA,GACdC,gBAAiBA,GACjBxD,WAAYA,GACZyD,UAAWA,GACXC,YAAaA,KAEf,qBAAK/G,UAAU,MAAf,SACE,wBACEA,UAAU,wBACViH,SACE0I,MAAM/I,KACNA,IAAgB,GAChBA,GAAeG,GAAc1D,GAE/BV,QAAS,kBAAM+G,EAAS,WAP1B,kCA5HR,qBAAK1J,UAAU,QAAf,SACI0K,EAoCA,qCACY,SAATA,GACC,wBAAQ/H,QAAS,kBAAMgI,EAAQ,KAAK3K,UAAU,SAA9C,oBAIF,wBACEiH,UAAY7D,IAAYvD,GAAIgC,UAAa1B,GAAMyP,SAAW7M,GAAY6M,QAAU1E,GAAS,GACzFlL,UAAU,iBACV2C,QAAO,sBAAE,sCAAAxE,EAAA,kEAED6E,EAFC,OAEKI,QAFL,IAEKA,OAFL,EAEKA,EAASU,OACfjE,GAAIgC,QAHH,iCAIwByG,GAAczI,GAAIgC,QAAS8J,GAAmB,GAJtE,cAIGkE,EAJH,YAKoBzS,EALpB,SAKmC0S,MAAMD,GAAczQ,MAAK,SAAA8P,GAAC,OAAIA,EAAEpN,UALnE,yCAKyBiO,IALzB,iCAKKC,EALL,EAKKA,KACRhN,EAAG,sCAAkCgN,GANlC,WAQLnU,EAAgB,wBACH,WAAT6O,EATC,kCAUG/M,EAASS,QAAQ6R,cACrB9P,GAAMyP,OACN7M,GAAY6M,OACZpR,IAAOC,MAAMyR,WAAWhF,GAAQ,IAChClI,GACAgH,KAAK,CAAEzG,KAAM/F,IAfZ,eAgBH3B,EAAgB,kCACVsU,EAjBH,+BAAAhS,EAAA,MAiBwB,kCAAAA,EAAA,6DACnBiS,EAASlN,EAAOmN,UAAU,CAAEC,MAAO5T,IACnC6T,EAAmBH,EAAO7L,SAAS2H,QAAO,SAAAzH,GAAC,OAAKA,EAAEmK,QAAQ/K,MAAQrG,KAAS6D,OAFxD,SAGFoJ,IAHE,mBAGjBrJ,EAHiB,EAGjBA,KACJmP,IAAqBnP,EAAKmD,SAAS2H,QAAO,SAAAzH,GAAC,OAAKA,EAAEmK,QAAQ/K,MAAQrG,KAAS6D,OAJtD,iCAKjB,IAAIK,SAAQ,SAAAC,GAAO,OAAI6O,WAAW7O,EAAS,QAL1B,wBAMjBwO,IANiB,4CAjBxB,+DA0BGA,IA1BH,QA2BH9F,EAAS,IAAD,OAAKrO,IA3BV,yCA6BG2B,EAASS,QAAQqS,YACrBtQ,GAAMyP,OACN7M,GAAY6M,OACZ5M,GACAgH,KAAK,CAAEzG,KAAM/F,IAjCZ,eAkCH3B,EAAgB,iCACV6U,EAnCH,+BAAAvS,EAAA,MAmCsB,kCAAAA,EAAA,6DACjBiS,EAASlN,EAAOmN,UAAU,CAAEC,MAAO1T,EAAc2N,UAAW,CAAEH,eAC9DuG,EAAkBP,EAAOhN,QAAQwN,UAFhB,SAGAnG,IAHA,mBAGfrJ,EAHe,EAGfA,KACJuP,IAAoBvP,EAAKgC,QAAQwN,UAJd,iCAKf,IAAIlP,SAAQ,SAAAC,GAAO,OAAI6O,WAAW7O,EAAS,QAL5B,wBAMf+O,IANe,4CAnCtB,+DA4CGA,IA5CH,0DA+CLzG,QAAQ5F,MAAR,MACAxI,EAAgB,KAAMyI,SAhDjB,0DAHX,SAuDY,WAAToG,EAAoB,kBAAoB,YAhG7C,qCACE,yBACEzD,WAAYsF,GACZvM,UAAU,uBACV2C,QAAO,sBAAE,4BAAAxE,EAAA,sEAELtC,EAAgB,qBAFX,SAGC8B,EAASS,QAAQyS,kBACrBzN,EAAQS,IACRmG,KAAK,CAAEzG,KAAM/F,IALV,cAML3B,EAAgB,+BACViV,EAPD,+BAAA3S,EAAA,MAO0B,kCAAAA,EAAA,6DACvBiS,EAASlN,EAAOmN,UAAU,CAAEC,MAAO1T,EAAc2N,UAAW,CAAEH,eAC9D2G,EAAsBX,EAAOhN,QAAQqJ,cAFd,SAGNhC,IAHM,mBAGrBrJ,EAHqB,EAGrBA,KACJ2P,IAAwB3P,EAAKgC,QAAQqJ,cAJZ,iCAKrB,IAAI/K,SAAQ,SAAAC,GAAO,OAAI6O,WAAW7O,EAAS,QALtB,wBAMrBmP,IANqB,4CAP1B,8DAgBCA,IAhBD,OAiBL7S,EAAaJ,GAjBR,kDAmBLoM,QAAQ5F,MAAR,MACAxI,EAAgB,KAAMyI,SApBjB,0DAHX,mBA2BSiI,GA3BT,WA6BA,wBAAQvM,UAAU,SAAS2C,QAAS,kBAAMgI,EAAQ,SAAlD,wBA4GND,GACA,sBAAK1K,UAAU,aAAf,UACE,oBAAIA,UAAU,KAAd,iCACA,sBAAKA,UAAU,QAAf,UACE,wBACE2C,QAAS,WACPqO,UAAUC,UAAUC,UAApB,UAAiCrS,OAAO2D,SAAS2O,OAAjD,YAA2DnV,EAA3D,YAAsEoH,EAAQS,KAC9EhI,EAAgB,yBAElBmE,UAAU,mBALZ,wBAOExC,KAAa4F,EAAQwL,QAAQ/K,IAC7B,cAAC,GAAD,CAAQ2F,YAAW,OAAEpG,QAAF,IAAEA,OAAF,EAAEA,EAASwL,QAAQ/K,WAKnC,WAAV4F,GACC,uBAAOzJ,UAAU,UAAjB,SACE,wBAAOA,UAAU,QAAjB,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,KAAd,2BACA,qDACmB,8BAAIxC,EAAUO,EAAU,SAAxB,iBAGrB,qBAAKiC,UAAU,WAAf,SACE,cAAC,GAAD,CACE4G,aAAcA,GACdC,gBAAiBA,GACjBxD,WAAYA,GACZyD,UAAWA,GACXC,YAAaA,OAGjB,0BACE/G,UAAU,WACV4J,KAAK,IACLC,YAAY,6BACZxC,MAAO/C,GACP6C,SAAU,SAAAC,GAAC,OAAIkE,GAAWlE,EAAE3H,OAAO4H,UAEpC7J,GACC,qBAAKwC,UAAU,iBAAf,SACGjC,EAAU6I,GAAeE,GAAYC,GAClC,6EACC4I,MAAM/I,KAAiBA,IAAgB,EACtC,yEACAA,GAAeG,GAAc1D,GAC3B,yDAA4B0D,GAAc1D,GAA1C,qBACA,OAGZ,sBAAKrD,UAAU,gBAAf,UACE,wBAAQA,UAAU,SAAS2C,QAAS,kBAAM+G,EAAS,KAAnD,kBAGClM,EACC,wBACEwC,UAAU,sBACViH,SACElJ,EAAU6I,GAAeE,GAAYC,IACrC4I,MAAM/I,KACNA,IAAgB,GAChBA,GAAeG,GAAc1D,GAE/BV,QAAO,sBAAE,8BAAAxE,EAAA,sEAELtC,EAAgB,8BACVuV,EAAW9N,IAAUC,KAAKH,EAAQO,iBAAiBF,IAAImD,IAAclD,IAAIqD,IAC/EkD,QAAQoH,IAAID,EAASE,YAJhB,SAKCzT,EAAKO,QAAQmT,QACjBzU,EAAYd,GACZoV,EAASE,YACTtH,KAAK,CAAEzG,KAAM/F,IARV,cASL3B,EAAgB,wBATX,SAUC8B,EAASS,QAAQoT,gBACrBpO,EAAQS,GACRuN,EAASE,WACThN,IACA0F,KAAK,CAAEzG,KAAM/F,IAdV,cAeL3B,EAAgB,+BACV4V,EAhBD,+BAAAtT,EAAA,MAgBwB,kCAAAA,EAAA,6DACrBiS,EAASlN,EAAOmN,UAAU,CAAEC,MAAO1T,EAAc2N,UAAW,CAAEH,eAC9DsH,EAAoBtB,EAAOhN,QAAQwJ,WAAWC,SAASX,QAAO,SAAAgD,GAAC,OAAKA,EAAEC,QAAQtL,MAAQrG,KAAS6D,OAF1E,SAGJoJ,IAHI,mBAGnBrJ,EAHmB,EAGnBA,KACJsQ,IAAsBtQ,EAAKgC,QAAQwJ,WAAWC,SAASX,QAAO,SAAAgD,GAAC,OAAKA,EAAEC,QAAQtL,MAAQrG,KAAS6D,OAJxE,iCAKnB,IAAIK,SAAQ,SAAAC,GAAO,OAAI6O,WAAW7O,EAAS,QALxB,wBAMnB8P,IANmB,4CAhBxB,+DAyBCA,IAzBD,QA0BL/H,EAAS,IACTzL,EAAaJ,GA3BR,kDA6BLoM,QAAQ5F,MAAR,MACAxI,EAAgB,KAAMyI,SA9BjB,0DARX,SA0CGvG,EAAU6I,GAAeE,GAAYC,IACpC4I,MAAM/I,KACNA,IAAgB,GAChBA,GAAeG,GAAc1D,GAC7B,OAJD,gBAKUuD,GAAeE,GAAYC,IAAapI,QAAQ,GAL1D,WAQH,wBAAQqB,UAAU,sBAAsB2C,QAASR,EAAjD,wC,mBChZDwP,OAhGf,WACE,MAAiC9O,cAAzB7G,EAAR,EAAQA,QAASwN,EAAjB,EAAiBA,YACjB,EAA6BlM,EAAYtB,GAAjCwB,EAAR,EAAQA,QAASO,EAAjB,EAAiBA,QAEjB,EAAwDoG,YAAStH,EAAS,CACxE0N,UAAW,CAAEf,eACbpF,QAAS,SAAAC,GAAK,OAAIxI,EAAgBwI,EAAMC,YAFlClD,KAAR,gBAAiD,GAAjD,GAAgByL,gBAAhB,MAA2B,GAA3B,MAA+BtI,gBAA/B,MAA0C,GAA1C,EAIA,EAAgC7G,mBAAS,IAAzC,mBAAOkU,EAAP,KAAiBC,EAAjB,KAmBA,OAjBAjT,qBAAU,WACR4R,WAAU,sBAAC,gCAAArS,EAAA,0DACLU,OAAOiT,mBADF,gCAEejF,GAFf,aAAA1O,EAAA,sCAAAA,EAAA,6DAEI4T,EAFJ,iBAGcjC,MAAMiC,EAAQ3O,QAAQU,OAAO1E,MAAK,SAAA8P,GAAC,OAAIA,EAAEpN,UAHvD,cAGCA,EAHD,gBAIiB,IAAIJ,SAAQ,SAACC,EAAS6F,GAC1C,IAAM7H,EAAS,IAAIC,WACnBD,EAAOqS,QAAUxK,EACjB7H,EAAOgB,OAAS,kBAAMgB,EAAQhC,EAAOqC,SACrCrC,EAAOsC,cAAcH,MARlB,OAICmQ,EAJD,OAULJ,GAAY,SAAAD,GAAQ,kCAAUA,GAAV,mBAAqBG,EAAQ3O,QAAQS,GAAKoO,OAVzD,oUAcV,CAAEzI,EAAaqD,IAGhB,sBAAK7M,UAAU,UAAf,UACE,sBAAKA,UAAU,MAAf,UACE,+BACGwJ,EAAYsF,MAAM,EAAG,GADxB,SAC6BtF,EAAYsF,OAAO,IAC5CtF,KAAiBhM,GAAW,cAE9BgM,KAAiBhM,EACjB,cAAC,GAAD,CAAQgM,YAAaA,IAErB,oDACkB,uBAChB,8BAAIzL,EAAJ,iBAIN,sBAAKiC,UAAU,YAAf,UACE,qBAAIA,UAAU,KAAd,WACIwJ,KAAiBhM,EAAU,iBAAmB,oBAChD,qCAAQ+G,EAASlD,OAAjB,UAEF,sBAAKrB,UAAU,WAAf,UACGuE,EAASC,KAAI,SAAAC,GAAC,OACb,cAAC,EAAD,CAASrB,QAASqB,GAAQA,EAAEZ,QAE5B2F,KAAiBhM,GACjB,eAAC,IAAD,CAAM+E,GAAE,WAAMvG,EAAN,QAAqBgE,UAAU,MAAvC,UACE,8BACE,sBAAKsG,MAAM,6BAA6BF,QAAQ,YAAYlG,OAAQ,GAApE,UAAwE,sBAAMmG,KAAK,OAAOG,EAAE,kBAAiB,sBAAMH,KAAK,eAAeG,EAAE,2CAE3I,iEAOR,sBAAKxG,UAAU,gBAAf,UACE,qBAAIA,UAAU,KAAd,WACIwJ,KAAiBhM,EAAU,qBAAuB,uBACpD,qCAAQqP,EAASxL,OAAjB,UAEF,sBAAKrB,UAAU,WAAf,UACG6M,EAASrI,KAAI,SAAAC,GAAM,IAAD,EACXyN,EAAO,eAAMzN,EAAE1B,mBAAR,aAAM,EAAeoP,MAAM,KAAKrD,MAAM,GAAGsD,KAAK,MAC3D,OACE,cAAC,IAAD,CAAM7P,GAAI2P,EAAMlS,UAAS,2BAAsBxC,KAAaiH,EAAEmK,SAAW,QAAzE,SACI/P,OAAOiT,mBAEL,qBAAK/P,IAAK0C,EAAEX,MAAMuO,QAAQ5N,EAAErB,QAAQU,MAAO8N,EAASnN,EAAErB,QAAQS,KAAM7D,UAAU,YAAY+D,IAAKU,EAAEtE,QADjG,wBAAQiB,KAAMqD,EAAEX,MAAOwK,KAAK,gBAAgBtO,UAAU,SAAS,aAAYyE,EAAEtE,SAFKsE,EAAEZ,QAO5F2F,KAAiBhM,GACjB,eAAC,IAAD,CAAM+E,GAAE,WAAMvG,GAAWgE,UAAU,MAAnC,UACE,8BACE,sBAAKsG,MAAM,6BAA6BF,QAAQ,YAAYlG,OAAQ,GAApE,UAAwE,sBAAMmG,KAAK,OAAOG,EAAE,kBAAiB,sBAAMH,KAAK,eAAeG,EAAE,8QAE3I,iECtFR8L,GAAYxS,SAASyS,eAAe,QAC7BC,qBAAWF,IACnBG,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAO1C,KAAK,IAAZ,UACE,cAAC,IAAD,CAAO/D,OAAK,EAAC0G,QAAS,cAAC,IAAD,CAAUpQ,GAAG,SAAS8P,SAAO,MACnD,eAAC,IAAD,CAAOrC,KAAK,WAAW2C,QAAS,cAAC,EAAD,IAAhC,UACE,cAAC,IAAD,CAAO1G,OAAK,EAAC0G,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAO3C,KAAK,MAAM2C,QAAS,cAAC,GAAD,CAAaxI,QAAM,MAC9C,cAAC,IAAD,CAAO6F,KAAK,aAAa2C,QAAS,cAAC,GAAD,MAClC,cAAC,IAAD,CAAO3C,KAAK,oBAAoB2C,QAAS,cAAC,GAAD,oB","file":"static/js/main.a3782492.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache, gql, makeVar } from '@apollo/client'\n\nexport const notificationVar = makeVar('')\n\nexport const createClient = chainId => new ApolloClient({\n  uri: chainId === '1337'\n    ? 'http://localhost:8000/subgraphs/name/yip-theodore/qavah'\n    : 'https://api.thegraph.com/subgraphs/name/yip-theodore/qavah',\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          notification: { read: () => notificationVar() },\n        },\n      },\n    },\n  }),\n})\n\nexport const ALL_PROJECTS = gql`\n  query {\n    projects(\n      orderBy: createdAt\n      orderDirection: desc\n      where: { reports_lt: 2 }\n    ) {\n      id\n      creator {\n        id\n      }\n      title\n      requestedAmount\n      description\n      image\n      fundedAmount\n      claimedAmount\n      donators {\n        id\n      }\n      createdAt\n      collection {\n        id\n      }\n    }\n  }\n`\n\nexport const PROJECT_INFO = gql`\n  query($projectId: ID!) {\n    project(id: $projectId) {\n      id\n      creator {\n        id\n      }\n      title\n      requestedAmount\n      description\n      image\n      fundedAmount\n      claimedAmount\n      donators {\n        id\n      }\n      createdAt\n      updatedAt\n      collection {\n        id\n        receipts(orderBy: timestamp) {\n          id\n          name\n          amount\n          image\n          timestamp\n          tokenId\n          donator {\n            id\n            reports\n          }\n          message\n        }\n      }\n      createdAt\n    }\n  }\n`\n\nexport const PROFILE = gql`\n  query($userAddress: ID!) {\n    projects(\n      where: {creator: $userAddress}\n      orderBy: createdAt\n      orderDirection: desc\n    ) {\n      id\n      title\n      requestedAmount\n      description\n      image\n      fundedAmount\n    }\n    receipts(\n      where: {donator: $userAddress}\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      id\n      description\n      image\n      project {\n        id\n        image\n      }\n    }\n  }\n`","import { useEffect, useState } from 'react'\nimport { useCelo } from '@celo/react-celo'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport { ethers } from 'ethers'\nimport DitherJS from 'ditherjs'\nimport contractAddresses from '../contracts/contract-address.json'\nimport Contract from '../contracts/Contract.json'\nimport CUSD from '../contracts/CUSD.json'\n\nexport const getContract = chainId => contractAddresses[chainId]\nexport const getAbi = () => Contract.abi\nexport const getNetwork = chainId => ({\n  1337: {\n    name: 'Localhost',\n    rpcUrl: 'http://localhost:8545',\n  },\n  44787: {\n    name: 'Alfajores',\n    rpcUrl: 'https://alfajores-forno.celo-testnet.org',\n    explorer: 'https://alfajores-blockscout.celo-testnet.org',\n  },\n  42220: {\n    name: 'Celo',\n    rpcUrl: 'https://forno.celo.org',\n    explorer: 'https://explorer.celo.org',\n  }\n})[chainId]\n\nexport const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n\nexport const useContract = (chainId) => {\n  const { address, kit } = useCelo()\n  const [ contract, setContract ] = useState(null)\n  const [ cUSD, setCUSD ] = useState(null)\n  const [ balance, setBalance ] = useState(null)\n\n  const fetchBalance = async (erc20) => {\n    const balance = await erc20.methods.balanceOf(address).call()\n    setBalance(parseFloat(ethers.utils.formatUnits(balance, 18)).toFixed(2))\n  }\n\n  useEffect(() => {\n    if (address) {\n      window.contract = new kit.connection.web3.eth.Contract(\n        getAbi(),\n        getContract(chainId),\n      )\n      setContract(window.contract)\n      window.contract.methods.usdTokenAddress(\n      ).call().then(usdTokenAddress => {\n        const cUSD = new kit.connection.web3.eth.Contract(\n          CUSD.abi,\n          usdTokenAddress,\n        )\n        fetchBalance(cUSD)\n        setCUSD(cUSD)\n      })\n    }\n  }, [ address ])\n\n\n  return { address, contract, balance, cUSD, fetchBalance }\n}\n\nexport async function onFileSelected (event, setImg) {\n  var selectedFile = event.target.files[0]\n  var reader = new FileReader()\n  if (!selectedFile) return\n\n  const img = document.createElement('img')\n  img.className = 'img'\n  img.width = 640\n  img.height = 360\n  img.title = selectedFile.name\n  document.body.appendChild(img)\n\n  const ditherjs = new DitherJS({\n    step: 1,\n    palette: [[0, 0, 0], [255, 255, 255]],\n    algorithm: 'atkinson' // one of ['ordered', 'diffusion', 'atkinson']\n  })\n  reader.onload = function (event) {\n    img.onload = async () => {\n      ditherjs.dither(img)\n      const canvas = document.querySelector('canvas:last-child')\n      const ctx = canvas.getContext('2d')\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n      for (var i = 0; i < imgData.data.length; i += 4) {\n        if (imgData.data[i + 0]) {\n          imgData.data[i + 0] = 251\n          imgData.data[i + 1] = 204\n          imgData.data[i + 2] = 92\n        } else {\n          imgData.data[i + 0] = 97\n          imgData.data[i + 1] = 31\n          imgData.data[i + 2] = 105\n        }\n      }\n      const canvas1 = document.createElement('canvas')\n      canvas1.className = 'canvas'\n      const ctx1 = canvas1.getContext('2d')\n      canvas1.width = canvas.width\n      canvas1.height = canvas.height\n      ctx1.putImageData(imgData, 0, 0)\n      setImg({\n        dataUrl: canvas1.toDataURL(),\n        blob: await new Promise(resolve => canvas1.toBlob(resolve)),\n        width: canvas1.width,\n        height: canvas1.height,\n      })\n    }\n    img.src = event.target.result\n  }\n  reader.readAsDataURL(selectedFile)\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useCelo } from '@celo/react-celo'\nimport { useReactiveVar } from '@apollo/client'\nimport { notificationVar } from '../graphql'\n\nfunction Header () {\n  const { connect, address, network, destroy } = useCelo()\n  const notification = useReactiveVar(notificationVar)\n  return (\n    <>\n      <header className='header'>\n        <Link to='' className='a logo plain'>\n          <h1 className='h1'>qavah</h1>\n          <span className=\"network\">{network.name}</span>\n        </Link>\n        {address ? (\n          <>\n          {window.location.pathname.includes('/user/' + address) ? (\n            <button className=\"a\" onClick={destroy}>Log out</button>\n          ) : (\n            <Link to={`user/${address}`} className='a'>My account</Link>\n          )}\n          </>\n        ) : (\n          <button className='a' onClick={connect}>Connect wallet</button>\n        )}\n      </header>\n      {notification && (\n        <div className='Message'>\n          <span>{notification}</span>\n          <button className='a' onClick={() => notificationVar('')}>x</button>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Outlet, useParams } from 'react-router-dom'\nimport { CeloProvider } from '@celo/react-celo'\nimport { ApolloProvider } from '@apollo/client'\nimport { createClient } from './graphql'\nimport { getNetwork } from './utils'\nimport Header from './components/Header'\nimport '@celo/react-celo/lib/styles.css'\nimport './index.scss'\n\nfunction App () {\n  const { chainId } = useParams()\n  return (\n    <CeloProvider\n      dapp={{\n        name: 'Qavah',\n        description: 'Spark hope.',\n        url: 'https://qavah.me',\n      }}\n      network={{\n        ...getNetwork(chainId),\n        chainId: +chainId,\n      }}\n    >\n      <ApolloProvider client={createClient(chainId)}>\n        <main>\n          <Header />\n          <Outlet />\n        </main>\n      </ApolloProvider>\n    </CeloProvider>\n  )\n}\n\nexport default App\n","import { Link, useParams } from 'react-router-dom'\nimport { ethers, BigNumber } from 'ethers'\n\nconst Project = ({ project }) => {\n  const { chainId } = useParams()\n  const percentage = BigNumber.from(project.fundedAmount).mul?.(100).div(project.requestedAmount).toNumber()\n  return (\n    <Link to={`/${chainId}/${project.id}`} className='Project'>\n      <img className='img image' src={project.image} alt='' />\n      <div className='content'>\n        <div className='title'>\n          <h3 className='h3'>{project.title}</h3>\n        </div>\n        <p className='description'>{project.description}</p>\n        <div className='bottom'>\n          <div>\n            <div className='progress'><div style={{ width: percentage + '%' }} /></div>\n            <span className='amounts'>{percentage}% funded of <b>{parseFloat(ethers.utils.formatUnits(project.requestedAmount, 18)).toFixed(2)} cUSD</b></span>\n          </div>\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nexport default Project\n","import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { ALL_PROJECTS, notificationVar } from '../graphql'\nimport Project from '../components/Project'\n\nfunction Explorer () {\n  const { data: { projects = [] } = {} } = useQuery(ALL_PROJECTS, {\n    onError: error => notificationVar(error.message),\n  })\n  return (\n    <div className='Explorer'>\n      <h2 className='h2'>All campaigns</h2>\n      <div className=\"projects\">\n        {projects.map((p, i) => (\n          <Project project={p} key={p.id} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Explorer\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPuzzle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 12 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3 7v-.8L9.2 4.5v-.3l1.3-.4.2-.8L9 1.3l-.8.2-.4 1.2-.3.1L5.8.7h-.9L3.5 2.2l.2.6 1.2.4.3.7-1.3 1.3-.7-.3-.4-1.2-.6-.2L.7 4.9v.9l2.1 1.7v.3l-1.3.4-.2.8L3 10.7l.8-.2.4-1.2.3-.1 1.7 2.1h.9l1.4-1.5-.2-.6-1.2-.4-.3-.7 1.3-1.3.7.3.4 1.2.6.2 1.5-1.4Z\",\n    stroke: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPuzzle);\nexport default __webpack_public_path__ + \"static/media/puzzle.a1cc5e0e.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as Puzzle } from '../assets/puzzle.svg'\n\nconst Select = ({ contribution, setContribution, percentage, requested, totalPieces }) => (\n  <>\n    <button\n      className='button minus'\n      onClick={() => setContribution((c) => +c - 1)}\n      disabled={contribution <= 0}\n    >-</button>\n    <input\n      className='input'\n      name='amount'\n      inputMode='numeric'\n      onChange={(e) => setContribution(e.target.value)}\n      value={contribution}\n      min={0}\n    />\n    <Puzzle width={16} height={16} />\n    <button\n      className='button plus'\n      onClick={() => setContribution((c) => +c + 1)}\n      disabled={contribution >= totalPieces - percentage}\n    >+</button>\n    <span>\n      ({contribution > 0 ? `${((contribution * requested) / totalPieces).toFixed(2)} cUSD` : '0 cUSD'})\n    </span>\n  </>\n)\n\nexport default Select","export const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nexport function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function rotateSize(width, height, rotation) {\n  const rotRad = getRadianAngle(rotation)\n\n  return {\n    width:\n      Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\n    height:\n      Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height),\n  }\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n */\nexport default async function getCroppedImg(\n  imageSrc,\n  pixelCrop,\n  rotation = 0,\n  flip = { horizontal: false, vertical: false }\n) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  if (!ctx) {\n    return null\n  }\n\n  const rotRad = getRadianAngle(rotation)\n\n  // calculate bounding box of the rotated image\n  const { width: bBoxWidth, height: bBoxHeight } = rotateSize(\n    image.width,\n    image.height,\n    rotation\n  )\n\n  // set canvas size to match the bounding box\n  canvas.width = bBoxWidth\n  canvas.height = bBoxHeight\n\n  // translate canvas context to a central location to allow rotating and flipping around the center\n  ctx.translate(bBoxWidth / 2, bBoxHeight / 2)\n  ctx.rotate(rotRad)\n  ctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1)\n  ctx.translate(-image.width / 2, -image.height / 2)\n\n  // draw rotated image\n  ctx.drawImage(image, 0, 0)\n\n  // croppedAreaPixels values are bounding box relative\n  // extract the cropped image using these values\n  const data = ctx.getImageData(\n    pixelCrop.x,\n    pixelCrop.y,\n    pixelCrop.width,\n    pixelCrop.height\n  )\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image at the top left corner\n  ctx.putImageData(data, 0, 0)\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve, reject) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","import React, { useState, useRef } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { notificationVar } from '../graphql'\nimport { useContract } from '../utils'\n\nconst Report = ({ userAddress }) => {\n  const { chainId } = useParams()\n  const { address, contract } = useContract(chainId)\n  const [modal, setModal] = useState(false)\n  const ref = useRef()\n  return (\n    <>\n      {modal === 'REPORT' && (\n        <aside className='overlay'>\n          <aside className='Modal'>\n            <div className='Modal__top'>\n              <h3>Are you sure to report this user?</h3>\n            </div>\n            <textarea ref={ref} className='textarea' rows='3' placeholder='Explain why (optional)' />\n            <div className='Modal__bottom'>\n              <button\n                className='button grow primary'\n                onClick={async () => {\n                  try {\n                    notificationVar('Please confirm…')\n                    await contract.methods.reportUser(\n                      userAddress,\n                      ref.current.value,\n                    ).send({ from: address })\n                    notificationVar('User reported.')\n                    setModal('')\n                  } catch (error) {\n                    console.error(error)\n                    notificationVar(error.message)\n                  }\n                }}\n              >\n                Report\n              </button>\n              <button className='button grow' onClick={() => setModal('')}>\n                Back\n              </button>\n            </div>\n          </aside>\n        </aside>\n      )}\n      <svg onClick={() => setModal('REPORT')} className='button icon' height={35} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>\n        <path fill='none' d='M0 0h24v24H0z'/><path fill='currentColor' d='M5 16v6H3V3h9.382a1 1 0 0 1 .894.553L14 5h6a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1h-6.382a1 1 0 0 1-.894-.553L12 16H5zM5 5v9h8.236l1 2H19V7h-6.236l-1-2H5z'/>\n      </svg>\n    </>\n  )\n}\n\nexport default Report","import React, { useRef, useEffect, useState } from 'react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport { useCelo } from '@celo/react-celo'\nimport { BigNumber, ethers } from 'ethers'\nimport { getContract, useContract } from '../utils'\nimport { PROJECT_INFO, ALL_PROJECTS, notificationVar } from '../graphql'\nimport { ReactComponent as Puzzle } from '../assets/puzzle.svg'\nimport Select from '../components/Select'\nimport Cropper from 'react-easy-crop'\nimport getCroppedImg from '../utils/cropImage'\nimport Report from '../components/Report'\nimport { ipfs, onFileSelected } from '../utils'\n\nfunction ProjectInfo ({ create = false }) {\n  const { chainId, projectId } = useParams()\n  const navigate = useNavigate()\n  const { connect } = useCelo()\n  const { address, contract, balance, cUSD, fetchBalance } = useContract(chainId)\n\n  const { data: { project } = {}, refetch, client } = useQuery(PROJECT_INFO, {\n    variables: { projectId },\n    onError: error => notificationVar(error.message),\n    skip: create,\n  })\n\n  const [ modal, setModal ] = useState('')\n  const [ mode, setMode ] = useState(create ? 'CREATE' : '')\n  const [ intersecting, setIntersecting ] = useState([])\n  const refs = useRef([ ...Array(101) ].map(() => React.createRef()))\n  const [ contribution, setContribution ] = useState(0)\n\n  const [img, setImg] = useState({})\n  const [ amount, setAmount ] = useState('')\n  const [ title, setTitle ] = useState('')\n  const [ description, setDescription ] = useState('')\n  const [ message, setMessage ] = useState('')\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\n  const [zoom, setZoom] = useState(1)\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\n\n  useEffect(() => {\n    if (project) {\n      if (project.fundedAmount !== project.requestedAmount) {\n        setContribution(1)\n      }\n      setAmount(parseFloat(ethers.utils.formatUnits(project.requestedAmount, 18)).toFixed(2))\n      setTitle(project.title)\n      setDescription(project.description)\n      const observer = new IntersectionObserver(\n        ([{ isIntersecting, target }]) => {\n          if (isIntersecting) {\n            setIntersecting((x) => [...x, +target.dataset.index])\n          } else {\n            setIntersecting((x) => x.filter((i) => i !== +target.dataset.index))\n          }\n        },\n        { rootMargin: '-40%' }\n      )\n      refs.current.forEach((ref) => ref.current && observer.observe(ref.current))\n      return () => observer.disconnect()\n    }\n  }, [ project ])\n\n  if (!project && !mode) return null\n  \n  const totalPieces = chainId === '1337' ? 25 : 100\n  const percentage = project && BigNumber.from(project.fundedAmount).mul?.(totalPieces).div(project.requestedAmount).toNumber()\n  const toClaim = project && parseFloat(ethers.utils.formatUnits(BigNumber.from(project.fundedAmount).sub?.(project.claimedAmount) || 0, 18)).toFixed(2)\n  const funded = project && parseFloat(ethers.utils.formatUnits(project.fundedAmount, 18)).toFixed(2)\n  const requested = project && parseFloat(ethers.utils.formatUnits(project.requestedAmount, 18)).toFixed(2)\n\n  const receiptsNb = project && project.collection.receipts.length\n  const ranges = project && project.collection.receipts.reduce((acc, curr) => [\n    ...acc, (acc[acc.length - 1] || 0) + (curr.amount / requested) * totalPieces,\n  ], [])\n  const chosen = project && intersecting[intersecting.length - 1]\n\n  return (\n    <div className='ProjectInfo'>\n      {!mode ? (\n        project.collection.receipts.length ? (\n          <svg className='svg' viewBox='0 0 320 180'>\n            <defs>\n              <image id='a' href={project.image} width='320' height='180' />\n            </defs>\n            {[ ...project.collection.receipts[receiptsNb - 1].image.matchAll(/<use.*?\\/>/g) ].map((m, i) => {\n              const owner = ranges.findIndex((x) => i < x)\n              return (\n                <use\n                  key={'use' + i}\n                  href='#a'\n                  clipPath={m[0].match(/clip-path='(.*?)'/)[1]}\n                  opacity={\n                    chosen > -1\n                      ? chosen === owner\n                        ? 1\n                        : owner > -1\n                          ? 0.3\n                          : 0.1\n                      : owner > -1\n                        ? 1\n                        : 1\n                  }\n                  style={{ transition: '0.3s' }}\n                />\n              )\n            })}\n          </svg>\n        ) : (\n          <img src={project.image} alt='' />\n        )\n      ) : (\n        <aside className='container'>\n          <div style={{ position: 'relative', aspectRatio: '16 / 9', zIndex: 2 }}>\n            <Cropper\n              image={img.dataUrl || project?.image}\n              aspect={16 / 9}\n              crop={crop}\n              onCropChange={setCrop}\n              onCropComplete={(_, croppedAreaPixels) => setCroppedAreaPixels(croppedAreaPixels)}\n              objectFit={img.width / img.height < 16 / 9 ? 'horizontal-cover' : 'vertical-cover'}\n              zoom={zoom}\n              onZoomChange={setZoom}\n            />\n          </div>\n        </aside>\n      )}\n      <div className='info'>\n        {mode && (\n          <div className='banner'>\n            <label className='button secondary upload' htmlFor='image'>\n              {(img.height || project?.image) ? 'Replace' : 'Upload'} image\n              <input id='image' className='input' type='file' name='image' onChange={e => onFileSelected(e, setImg)} accept='image/*' />\n            </label>\n            <span className='requested'>\n              <input\n                className='input'\n                name='requested'\n                type='number'\n                step='1'\n                min='10'\n                placeholder='100'\n                inputMode='numeric'\n                disabled={requested}\n                value={amount}\n                onChange={e => setAmount(e.target.value)}\n              />\n            </span>    \n          </div>\n        )}\n        {!mode ? (\n          <h3 className='h3'>\n            <span>{project.title}</span>\n          </h3>\n        ) : (\n          <textarea\n            className='textarea editable'\n            name='title'\n            placeholder='Your project title'\n            rows='2'\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n        )}\n        {!mode && (\n          <div className='summary'>\n            <span className='amounts'>\n              <b>{funded} cUSD</b> funded / <b>{requested}</b>\n            </span>\n            <span>\n              by <b>{project.donators.length} donators</b>\n            </span>\n          </div>\n        )}\n        {!mode ? (\n           <p className='description'>\n            <span>{project.description}</span>\n          </p>\n        ) : (\n          <textarea\n            className='textarea editable'\n            name='description'\n            placeholder='A more detailed description…'\n            rows='10'\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n          />\n        )}\n      </div>\n      {!mode && (\n        <div className='timeline'>\n          <div className='h4'>\n            Contributions ({project.collection.receipts.length})\n            <span>{100 * percentage / totalPieces}% raised</span>\n          </div>\n          <ul className='ul'>\n            <li\n              className='li'\n              ref={refs.current[100]}\n              data-index={100}\n              style={{ opacity: chosen === 100 ? 1 : 0.5 }}\n              onMouseOver={() => setIntersecting([100])}\n              onMouseOut={() => setIntersecting([])}\n            >\n              <div className='label'>\n                <h5>\n                  <Link to={`/${chainId}/user/${project.creator.id.toLowerCase()}`} className='a plain'>\n                    {+address === +project.creator.id ? 'You' : `${project.creator.id.slice(0, 6)}…${project.creator.id.slice(-2)}`}\n                  </Link>\n                </h5>\n                <span className='small'>\n                  {new Date(project.createdAt * 1000).toLocaleDateString()}\n                </span>\n              </div>\n              <div className='label'>\n                <span>created the campaign</span>\n                <span className='small'></span>\n              </div>\n            </li>\n            {project.collection.receipts.map((r, i) => (\n              <li\n                ref={refs.current[i]}\n                data-index={i}\n                className='li donation'\n                style={{ opacity: chosen === i ? 1 : 0.5 }}\n                key={`${i}_${r.id}`}\n                onMouseOver={() => setIntersecting([i])}\n                onMouseOut={() => setIntersecting([])}\n              >\n                <div className='label'>\n                  <h5>\n                    <Link\n                      to={`/${chainId}/user/${r.donator.id.toLowerCase()}`}\n                      className='a plain'\n                    >\n                      {+address === +r.donator.id ? 'You' : `${r.donator.id.slice(0, 6)}…${r.donator.id.slice(-2)}`}\n                    </Link>\n                  </h5>\n                  <span className='small'>\n                    {new Date(r.timestamp * 1000).toLocaleDateString(undefined, { day: 'numeric', month: 'numeric' })}\n                  </span>\n                </div>\n                <div className='label'>\n                  <span>\n                    {' '}contributed <b>{r.amount} cUSD</b>\n                  </span>\n                  <span className='small'>\n                    &mdash;{' '}{r.donator.reports ? '(…)' : r.message}\n                  </span>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {!project || +address === +project.creator.id ? (\n        <div className='admin'>\n          {!mode ? (\n            <>\n              <button\n                disabled={!+toClaim}\n                className='button claim primary'\n                onClick={async () => {\n                  try {\n                    notificationVar('Please wait…')\n                    await contract.methods.claimProjectFunds(\n                      project.id\n                    ).send({ from: address })\n                    notificationVar('Funds successfully claimed!')\n                    const fetchClaimProjectFunds = async () => {\n                      const cached = client.readQuery({ query: PROJECT_INFO, variables: { projectId } })\n                      const cachedClaimedAmount = cached.project.claimedAmount\n                      const { data } = await refetch()\n                      if (cachedClaimedAmount === data.project.claimedAmount) {\n                        await new Promise(resolve => setTimeout(resolve, 1000))\n                        await fetchClaimProjectFunds()\n                      }\n                    }\n                    await fetchClaimProjectFunds()\n                    fetchBalance(cUSD)\n                  } catch (error) {\n                    console.error(error)\n                    notificationVar(error.message)\n                  }\n                }}\n              >\n                Claim {toClaim} cUSD\n              </button>\n              <button className='button' onClick={() => setMode('EDIT')}>\n                Edit\n              </button>\n            </>\n          ) : (\n            <>\n              {mode === 'EDIT' && (\n                <button onClick={() => setMode('')} className='button'>\n                  Cancel\n                </button>\n              )}\n              <button\n                disabled={(!project && !img.dataUrl) || !title.trim() || !description.trim() || amount < 10}\n                className='button primary'\n                onClick={async () => {\n                  try {\n                    let url = project?.image\n                    if (img.dataUrl) {\n                      const croppedImage = await getCroppedImg(img.dataUrl, croppedAreaPixels, 0)\n                      const { path } = await ipfs.add(await fetch(croppedImage).then(r => r.blob()))\n                      url = `https://ipfs.infura.io/ipfs/${path}`\n                    }\n                    notificationVar('Please confirm…')\n                    if (mode === 'CREATE') {\n                      await contract.methods.createProject(\n                        title.trim(),\n                        description.trim(),\n                        ethers.utils.parseUnits(amount, 18),\n                        url,\n                      ).send({ from: address })\n                      notificationVar('Campaign successfully created!')\n                      const fetchCreateProject = async () => {\n                        const cached = client.readQuery({ query: ALL_PROJECTS })\n                        const cachedMyProjects = cached.projects.filter(p => +p.creator.id === +address).length\n                        const { data } = await refetch()\n                        if (cachedMyProjects === data.projects.filter(p => +p.creator.id === +address).length) {\n                          await new Promise(resolve => setTimeout(resolve, 1000))\n                          await fetchCreateProject()\n                        }\n                      }\n                      await fetchCreateProject()\n                      navigate(`/${chainId}`)\n                    } else {\n                      await contract.methods.editProject(\n                        title.trim(),\n                        description.trim(),\n                        url,\n                      ).send({ from: address })\n                      notificationVar('Project successfully updated!')\n                      const fetchEditProject = async () => {\n                        const cached = client.readQuery({ query: PROJECT_INFO, variables: { projectId } })\n                        const cachedUpdatedAt = cached.project.updatedAt\n                        const { data } = await refetch()\n                        if (cachedUpdatedAt === data.project.updatedAt) {\n                          await new Promise(resolve => setTimeout(resolve, 1000))\n                          await fetchEditProject()\n                        }\n                      }\n                      await fetchEditProject()\n                    }\n                  } catch (error) {\n                    console.error(error)\n                    notificationVar(error.message)\n                  }\n                }}\n              >\n                {mode === 'CREATE' ? 'Create campaign' : 'Save'}\n              </button>\n            </>\n          )}\n        </div>\n      ) : (\n        <div className='contribute'>\n          <div className='h4'>\n            How can I help?\n            <span>\n              {totalPieces - percentage}{' '}\n              <Puzzle width={16} height={16} fill='rgba(97, 31, 105, 0.3)' color='rgba(97, 31, 105, 1)' strokeWidth={0.5} />\n              left\n            </span>\n          </div>\n          <main>\n            <div className='interact'>\n              <b>Give to this campaign</b>\n              <Select\n                contribution={contribution}\n                setContribution={setContribution}\n                percentage={percentage}\n                requested={requested}\n                totalPieces={totalPieces}\n              />\n              <div className='cta'>\n                <button\n                  className='button primary donate'\n                  disabled={\n                    isNaN(contribution) ||\n                    contribution <= 0 ||\n                    contribution > totalPieces - percentage\n                  }\n                  onClick={() => setModal('DONATE')}\n                >\n                  Donate now\n                </button>\n              </div>\n            </div>\n          </main>\n        </div>\n      )}\n      {!mode && (\n        <div className='contribute'>\n          <h5 className='h5'>Share this campaign</h5>\n          <div className='share'>\n            <button\n              onClick={() => {\n                navigator.clipboard.writeText(`${window.location.origin}/${chainId}/${project.id}`)\n                notificationVar('Copied to clipboard!')\n              }}\n              className='button secondary'\n            >Copy link</button>\n            {+address !== +project.creator.id && (\n              <Report userAddress={project?.creator.id} />\n            )}\n          </div>\n        </div>\n      )}\n      {modal === 'DONATE' && (\n        <aside className='overlay'>\n          <aside className='Modal'>\n            <div className='Modal__top'>\n              <h3 className='h5'>Are you sure?</h3>\n              <span>\n                Current balance: <b>{address ? balance : '…'} cUSD</b>\n              </span>\n            </div>\n            <div className='interact'>\n              <Select\n                contribution={contribution}\n                setContribution={setContribution}\n                percentage={percentage}\n                requested={requested}\n                totalPieces={totalPieces}\n              />\n            </div>\n            <textarea\n              className='textarea'\n              rows='3'\n              placeholder='Leave a message (optional)'\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n            />\n            {address && (\n              <div className='Modal__warning'>\n                {balance < contribution * requested / totalPieces\n                  ? <span>Uh-oh, your balance is not high enough :/</span>\n                  : (isNaN(contribution) || contribution <= 0)\n                    ? <span>Looks like it's not a valid amount :/</span>\n                    : contribution > totalPieces - percentage\n                      ? <span>Sorry, there is only {totalPieces - percentage} pieces left :/</span>\n                      : null}\n              </div>\n            )}\n            <div className='Modal__bottom'>\n              <button className='button' onClick={() => setModal('')}>\n                Back\n              </button>\n              {address ? (\n                <button\n                  className='button grow primary'\n                  disabled={\n                    balance < contribution * requested / totalPieces ||\n                    isNaN(contribution) ||\n                    contribution <= 0 ||\n                    contribution > totalPieces - percentage\n                  }\n                  onClick={async () => {\n                    try {\n                      notificationVar('Waiting for approval…')\n                      const donation = BigNumber.from(project.requestedAmount).mul(contribution).div(totalPieces)\n                      console.log(donation.toString())\n                      await cUSD.methods.approve(\n                        getContract(chainId),\n                        donation.toString(),\n                      ).send({ from: address })\n                      notificationVar('Please confirm…')\n                      await contract.methods.donateToProject(\n                        project.id,\n                        donation.toString(),\n                        message,\n                      ).send({ from: address })\n                      notificationVar('Donation successfully sent!')\n                      const fetchDonateToProject = async () => {\n                        const cached = client.readQuery({ query: PROJECT_INFO, variables: { projectId } })\n                        const cachedMyDonations = cached.project.collection.receipts.filter(r => +r.donator.id === +address).length\n                        const { data } = await refetch()\n                        if (cachedMyDonations === data.project.collection.receipts.filter(r => +r.donator.id === +address).length) {\n                          await new Promise(resolve => setTimeout(resolve, 1000))\n                          await fetchDonateToProject()\n                        }\n                      }\n                      await fetchDonateToProject()\n                      setModal('')\n                      fetchBalance(cUSD)\n                    } catch (error) {\n                      console.error(error)\n                      notificationVar(error.message)\n                    }\n                  }}\n                >\n                  {balance < contribution * requested / totalPieces ||\n                    isNaN(contribution) ||\n                    contribution <= 0 ||\n                    contribution > totalPieces - percentage\n                  ? 'Give'\n                  : `Give ${(contribution * requested / totalPieces).toFixed(2)} cUSD`}\n                </button>\n              ) : (\n                <button className='button grow primary' onClick={connect}>\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </aside>\n        </aside>\n      )}\n    </div>\n  )\n}\n\nexport default ProjectInfo\n","import React, { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport { BigNumber } from 'ethers'\nimport { PROFILE, notificationVar } from '../graphql'\nimport { useContract } from '../utils'\nimport Project from '../components/Project'\nimport Report from '../components/Report'\n\nfunction Profile () {\n  const { chainId, userAddress } = useParams()\n  const { address, balance } = useContract(chainId)\n\n  const { data: { receipts = [], projects = [] } = {} } = useQuery(PROFILE, {\n    variables: { userAddress },\n    onError: error => notificationVar(error.message),\n  })\n  const [dataImgs, setDataImgs] = useState({})\n\n  useEffect(() => {\n    setTimeout(async () => {\n      if (window.ReactNativeWebView) {\n        for (const receipt of receipts) {\n          const blob = await fetch(receipt.project.image).then(r => r.blob())\n          const dataImg = await new Promise((resolve, reject) => {\n            const reader = new FileReader()\n            reader.onerror = reject\n            reader.onload = () => resolve(reader.result)\n            reader.readAsDataURL(blob)\n          })\n          setDataImgs(dataImgs => ({ ...dataImgs, [receipt.project.id]: dataImg }))\n        }\n      }\n    })\n  }, [ userAddress, receipts ])\n\n  return (\n    <div className='Profile'>\n      <div className='top'>\n        <h1>\n          {userAddress.slice(0, 6)}…{userAddress.slice(-2)}\n          {+userAddress !== +address && '’s'}\n        </h1>\n        {+userAddress !== +address ? (\n          <Report userAddress={userAddress} />\n        ) : (\n          <span>\n            Current balance:<br />\n            <b>{balance} cUSD</b>\n          </span>\n        )}\n      </div>\n      <div className='campaigns'>\n        <h2 className='h2'>\n          {+userAddress === +address ? 'Your campaigns' : 'Created campaigns'}\n          <span>({projects.length})</span>\n        </h2>\n        <div className='projects'>\n          {projects.map(p => (\n            <Project project={p} key={p.id} />\n          ))}\n          {+userAddress === +address && (\n            <Link to={`/${chainId}/new`} className='new'>\n              <div>\n                <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' height={18}><path fill='none' d='M0 0h24v24H0z'/><path fill='currentColor' d='M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z'/></svg>\n              </div>\n              <span>\n                Start a new campaign\n              </span>\n            </Link>\n          )}\n        </div>\n      </div>\n      <div className='contributions'>\n        <h2 className='h2'>\n          {+userAddress === +address ? 'Your contributions' : 'Public contributions'}\n          <span>({receipts.length})</span>\n        </h2>\n        <div className='projects'>\n          {receipts.map(p => {\n            const link = '/' + p.description?.split('/').slice(3).join('/')\n            return (\n              <Link to={link} className={`a Project plain ${+address === +p.creator && 'mine'}`} key={p.id}>\n                {!window.ReactNativeWebView\n                  ? <object data={p.image} type='image/svg+xml' className='object' aria-label={p.title} />\n                  : <img src={p.image.replace(p.project.image, dataImgs[p.project.id])} className='img image' alt={p.title} />}\n              </Link>\n            )\n          })}\n          {+userAddress === +address && (\n            <Link to={`/${chainId}`} className='new'>\n              <div>\n                <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' height={16}><path fill='none' d='M0 0H24V24H0z'/><path fill='currentColor' d='M6 3c3.49 0 6.383 2.554 6.913 5.895C14.088 7.724 15.71 7 17.5 7H22v2.5c0 3.59-2.91 6.5-6.5 6.5H13v5h-2v-8H9c-3.866 0-7-3.134-7-7V3h4zm14 6h-2.5c-2.485 0-4.5 2.015-4.5 4.5v.5h2.5c2.485 0 4.5-2.015 4.5-4.5V9zM6 5H4v1c0 2.761 2.239 5 5 5h2v-1c0-2.761-2.239-5-5-5z'/></svg>\n              </div>\n              <span>\n                Explore projects\n              </span>\n            </Link>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom'\nimport App from './App'\nimport Explorer from './pages/Explorer'\nimport ProjectInfo from './pages/ProjectInfo'\nimport Profile from './pages/Profile'\n\nconst container = document.getElementById('root')\nconst root = createRoot(container)\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path='/'>\n          <Route index element={<Navigate to='/44787' replace />} />\n          <Route path=':chainId' element={<App />}>\n            <Route index element={<Explorer />} />\n            <Route path='new' element={<ProjectInfo create />} />\n            <Route path=':projectId' element={<ProjectInfo />} />\n            <Route path='user/:userAddress' element={<Profile />} />\n          </Route>\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n)\n"],"sourceRoot":""}