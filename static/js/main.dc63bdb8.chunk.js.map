{"version":3,"sources":["graphql.js","utils/index.js","components/Header.jsx","App.jsx","components/Project.jsx","pages/Explorer.jsx","assets/puzzle.svg","components/Select.jsx","utils/cropImage.js","components/Report.jsx","pages/ProjectInfo.jsx","pages/Profile.jsx","index.js"],"names":["notificationVar","makeVar","createClient","chainId","ApolloClient","uri","cache","InMemoryCache","typePolicies","Query","fields","notification","read","defaultOptions","query","fetchPolicy","ALL_PROJECTS","gql","PROJECT_INFO","PROFILE","getContract","contractAddresses","getNetwork","name","rpcUrl","explorer","ipfs","ipfsHttpClient","useContract","useCelo","address","kit","useState","contract","setContract","cUSD","setCUSD","balance","setBalance","fetchBalance","erc20","a","methods","balanceOf","call","ethers","utils","formatUnits","useEffect","window","connection","web3","eth","Contract","abi","usdTokenAddress","then","CUSD","Header","connect","network","destroy","useReactiveVar","className","to","location","pathname","includes","onClick","App","useParams","dapp","description","url","ApolloProvider","client","Project","project","percentage","BigNumber","from","fundedAmount","mul","div","requestedAmount","toNumber","id","src","image","alt","title","style","width","Explorer","_path","useQuery","onError","error","message","data","projects","map","p","i","_excluded","_extends","Object","assign","bind","target","arguments","length","source","key","prototype","hasOwnProperty","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPuzzle","_ref","svgRef","titleId","props","viewBox","fill","xmlns","ref","d","stroke","ForwardRef","Select","contribution","setContribution","requested","totalPieces","c","disabled","inputMode","onChange","e","value","min","height","createImage","Promise","resolve","reject","Image","addEventListener","setAttribute","getRadianAngle","degreeValue","Math","PI","rotateSize","rotation","rotRad","abs","cos","sin","getCroppedImg","imageSrc","pixelCrop","flip","horizontal","vertical","canvas","document","createElement","ctx","getContext","bBoxWidth","bBoxHeight","translate","rotate","scale","drawImage","getImageData","x","y","putImageData","toBlob","file","URL","createObjectURL","Report","userAddress","modal","setModal","useRef","rows","placeholder","reportUser","current","send","console","ProjectInfo","create","projectId","navigate","useNavigate","variables","refetch","mode","setMode","intersecting","setIntersecting","refs","Array","React","createRef","img","setImg","amount","setAmount","setTitle","setDescription","setMessage","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","observer","IntersectionObserver","isIntersecting","dataset","index","filter","rootMargin","forEach","observe","disconnect","toClaim","sub","claimedAmount","funded","receiptsNb","collection","receipts","ranges","reduce","acc","curr","chosen","position","aspectRatio","zIndex","dataUrl","aspect","onCropChange","onCropComplete","_","objectFit","onZoomChange","href","matchAll","m","owner","findIndex","clipPath","match","opacity","transition","htmlFor","type","event","selectedFile","files","reader","FileReader","body","appendChild","ditherjs","DitherJS","step","palette","algorithm","onload","dither","querySelector","imgData","canvas1","ctx1","toDataURL","blob","result","readAsDataURL","onFileSelected","accept","donators","onMouseOver","onMouseOut","creator","toLowerCase","slice","Date","createdAt","toLocaleDateString","r","donator","timestamp","undefined","day","month","reports","color","strokeWidth","isNaN","trim","croppedImage","fetch","add","path","createProject","parseUnits","setTimeout","editProject","claimProjectFunds","toFixed","donation","toString","log","approve","donateToProject","Profile","dataImgs","setDataImgs","ReactNativeWebView","receipt","onerror","dataImg","replace","container","getElementById","createRoot","render","StrictMode","element"],"mappings":"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","file":"static/js/main.dc63bdb8.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache, gql, makeVar } from '@apollo/client'\n\nexport const notificationVar = makeVar('')\n\nexport const createClient = chainId => new ApolloClient({\n  uri: chainId === '1337'\n    ? 'http://localhost:8000/subgraphs/name/yip-theodore/qavah'\n    : 'https://api.thegraph.com/subgraphs/name/yip-theodore/qavah',\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          notification: { read: () => notificationVar() },\n        },\n      },\n    },\n  }),\n  defaultOptions: {\n    query: {\n      fetchPolicy: 'network-only',\n    },\n  },\n})\n\nexport const ALL_PROJECTS = gql`\n  query {\n    projects(\n      orderBy: createdAt\n      orderDirection: desc\n      where: { reports_lt: 2 }\n    ) {\n      id\n      creator {\n        id\n      }\n      title\n      requestedAmount\n      description\n      image\n      fundedAmount\n      claimedAmount\n      donators {\n        id\n      }\n      createdAt\n      collection {\n        id\n      }\n    }\n  }\n`\n\nexport const PROJECT_INFO = gql`\n  query($projectId: ID!) {\n    project(id: $projectId) {\n      id\n      creator {\n        id\n      }\n      title\n      requestedAmount\n      description\n      image\n      fundedAmount\n      claimedAmount\n      donators {\n        id\n      }\n      createdAt\n      collection {\n        id\n        receipts(orderBy: timestamp) {\n          id\n          name\n          amount\n          image\n          timestamp\n          tokenId\n          donator {\n            id\n            reports\n          }\n          message\n        }\n      }\n      createdAt\n    }\n  }\n`\n\nexport const PROFILE = gql`\n  query($userAddress: ID!) {\n    projects(\n      where: {creator: $userAddress}\n      orderBy: createdAt\n      orderDirection: desc\n    ) {\n      id\n      title\n      requestedAmount\n      description\n      image\n      fundedAmount\n    }\n    receipts(\n      where: {donator: $userAddress}\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      id\n      description\n      image\n      project {\n        id\n        image\n      }\n    }\n  }\n`","import { useEffect, useState } from 'react'\nimport { useCelo } from '@celo/react-celo'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport { ethers } from 'ethers'\nimport DitherJS from 'ditherjs'\nimport contractAddresses from '../contracts/contract-address.json'\nimport Contract from '../contracts/Contract.json'\nimport CUSD from '../contracts/CUSD.json'\n\nexport const getContract = chainId => contractAddresses[chainId]\nexport const getAbi = () => Contract.abi\nexport const getNetwork = chainId => ({\n  1337: {\n    name: 'Localhost',\n    rpcUrl: 'http://localhost:8545',\n  },\n  44787: {\n    name: 'Alfajores',\n    rpcUrl: 'https://alfajores-forno.celo-testnet.org',\n    explorer: 'https://alfajores-blockscout.celo-testnet.org',\n  },\n  42220: {\n    name: 'Celo',\n    rpcUrl: 'https://forno.celo.org',\n    explorer: 'https://explorer.celo.org',\n  }\n})[chainId]\n\nexport const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n\nexport const useContract = (chainId) => {\n  const { address, kit } = useCelo()\n  const [ contract, setContract ] = useState(null)\n  const [ cUSD, setCUSD ] = useState(null)\n  const [ balance, setBalance ] = useState(null)\n\n  const fetchBalance = async (erc20) => {\n    const balance = await erc20.methods.balanceOf(address).call()\n    setBalance(+ethers.utils.formatUnits(balance, 18))\n  }\n\n  useEffect(() => {\n    if (address) {\n      window.contract = new kit.connection.web3.eth.Contract(\n        getAbi(),\n        getContract(chainId),\n      )\n      setContract(window.contract)\n      window.contract.methods.usdTokenAddress(\n      ).call().then(usdTokenAddress => {\n        const cUSD = new kit.connection.web3.eth.Contract(\n          CUSD.abi,\n          usdTokenAddress,\n        )\n        fetchBalance(cUSD)\n        setCUSD(cUSD)\n      })\n    }\n  }, [ address ])\n\n\n  return { address, contract, balance, cUSD, fetchBalance }\n}\n\nexport function onFileSelected (event, setImg) {\n  var selectedFile = event.target.files[0]\n  var reader = new FileReader()\n  if (!selectedFile) return\n\n  const img = document.createElement('img')\n  img.className = 'img'\n  img.width = 640\n  img.title = selectedFile.name\n  document.body.appendChild(img)\n\n  const ditherjs = new DitherJS({\n    step: 1,\n    palette: [[0, 0, 0], [255, 255, 255]],\n    algorithm: 'atkinson' // one of ['ordered', 'diffusion', 'atkinson']\n  })\n  reader.onload = function (event) {\n    img.onload = async () => {\n      ditherjs.dither(img)\n      const canvas = document.querySelector('canvas:last-child')\n      const ctx = canvas.getContext('2d')\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n      for (var i = 0; i < imgData.data.length; i += 4) {\n        if (imgData.data[i + 0]) {\n          imgData.data[i + 0] = 251\n          imgData.data[i + 1] = 204\n          imgData.data[i + 2] = 92\n        } else {\n          imgData.data[i + 0] = 97\n          imgData.data[i + 1] = 31\n          imgData.data[i + 2] = 105\n        }\n      }\n      const canvas1 = document.createElement('canvas')\n      canvas1.className = 'canvas'\n      const ctx1 = canvas1.getContext('2d')\n      canvas1.width = canvas.width\n      canvas1.height = canvas.height\n      ctx1.putImageData(imgData, 0, 0)\n      setImg({\n        dataUrl: canvas1.toDataURL(),\n        blob: await new Promise(resolve => canvas1.toBlob(resolve)),\n        width: canvas.width,\n        height: canvas.height,\n      })\n    }\n    img.src = event.target.result\n  }\n  reader.readAsDataURL(selectedFile)\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useCelo } from '@celo/react-celo'\nimport { useReactiveVar } from '@apollo/client'\nimport { notificationVar } from '../graphql'\n\nfunction Header () {\n  const { connect, address, network, destroy } = useCelo()\n  const notification = useReactiveVar(notificationVar)\n  return (\n    <>\n      <header className='header'>\n        <Link to='' className='a logo plain'>\n          <h1 className='h1'>qavah</h1>\n          <span className=\"network\">{network.name}</span>\n        </Link>\n        {address ? (\n          <>\n          {window.location.pathname.includes('/user/' + address) ? (\n            <button className=\"a\" onClick={destroy}>Log out</button>\n          ) : (\n            <Link to={`user/${address}`} className='a'>My account</Link>\n          )}\n          </>\n        ) : (\n          <button className='a' onClick={connect}>Connect wallet</button>\n        )}\n      </header>\n      {notification && (\n        <div className='Message'>\n          <span>{notification}</span>\n          <button className='a' onClick={() => notificationVar('')}>x</button>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Outlet, useParams } from 'react-router-dom'\nimport { CeloProvider } from '@celo/react-celo'\nimport { ApolloProvider } from '@apollo/client'\nimport { createClient } from './graphql'\nimport { getNetwork } from './utils'\nimport Header from './components/Header'\nimport '@celo/react-celo/lib/styles.css'\nimport './index.scss'\n\nfunction App () {\n  const { chainId } = useParams()\n  return (\n    <CeloProvider\n      dapp={{\n        name: 'Qavah',\n        description: 'Spark hope.',\n        url: 'https://qavah.me',\n      }}\n      network={{\n        ...getNetwork(chainId),\n        chainId: +chainId,\n      }}\n    >\n      <ApolloProvider client={createClient(chainId)}>\n        <main>\n          <Header />\n          <Outlet />\n        </main>\n      </ApolloProvider>\n    </CeloProvider>\n  )\n}\n\nexport default App\n","import { Link, useParams } from 'react-router-dom'\nimport { ethers, BigNumber } from 'ethers'\n\nconst Project = ({ project }) => {\n  const { chainId } = useParams()\n  const percentage = BigNumber.from(project.fundedAmount).mul?.(100).div(project.requestedAmount).toNumber()\n  return (\n    <Link to={`/${chainId}/${project.id}`} className='Project'>\n      <img className='img image' src={project.image} alt='' />\n      <div className='content'>\n        <div className='title'>\n          <h3 className='h3'>{project.title}</h3>\n        </div>\n        <p className='description'>{project.description}</p>\n        <div className='bottom'>\n          <div>\n            <div className='progress'><div style={{ width: percentage + '%' }} /></div>\n            <span className='amounts'>{percentage}% funded of <b>{+ethers.utils.formatUnits(project.requestedAmount, 18)} cUSD</b></span>\n          </div>\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nexport default Project\n","import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { ALL_PROJECTS, notificationVar } from '../graphql'\nimport Project from '../components/Project'\n\nfunction Explorer () {\n  const { data: { projects = [] } = {} } = useQuery(ALL_PROJECTS, {\n    onError: error => notificationVar(error.message),\n  })\n  return (\n    <div className='Explorer'>\n      <h2 className='h2'>All campaigns</h2>\n      <div className=\"projects\">\n        {projects.map((p, i) => (\n          <Project project={p} key={p.id} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Explorer\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPuzzle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 12 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3 7v-.8L9.2 4.5v-.3l1.3-.4.2-.8L9 1.3l-.8.2-.4 1.2-.3.1L5.8.7h-.9L3.5 2.2l.2.6 1.2.4.3.7-1.3 1.3-.7-.3-.4-1.2-.6-.2L.7 4.9v.9l2.1 1.7v.3l-1.3.4-.2.8L3 10.7l.8-.2.4-1.2.3-.1 1.7 2.1h.9l1.4-1.5-.2-.6-1.2-.4-.3-.7 1.3-1.3.7.3.4 1.2.6.2 1.5-1.4Z\",\n    stroke: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPuzzle);\nexport default __webpack_public_path__ + \"static/media/puzzle.a1cc5e0e.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as Puzzle } from '../assets/puzzle.svg'\n\nconst Select = ({ contribution, setContribution, percentage, requested, totalPieces }) => (\n  <>\n    <button\n      className='button minus'\n      onClick={() => setContribution((c) => +c - 1)}\n      disabled={contribution <= 0}\n    >-</button>\n    <input\n      className='input'\n      name='amount'\n      inputMode='numeric'\n      onChange={(e) => setContribution(e.target.value)}\n      value={contribution}\n      min={0}\n    />\n    <Puzzle width={16} height={16} />\n    <button\n      className='button plus'\n      onClick={() => setContribution((c) => +c + 1)}\n      disabled={contribution >= totalPieces - percentage}\n    >+</button>\n    <span>\n      ({contribution > 0 ? `${(contribution * requested) / totalPieces} cUSD` : '0 cUSD'})\n    </span>\n  </>\n)\n\nexport default Select","export const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nexport function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function rotateSize(width, height, rotation) {\n  const rotRad = getRadianAngle(rotation)\n\n  return {\n    width:\n      Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\n    height:\n      Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height),\n  }\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n */\nexport default async function getCroppedImg(\n  imageSrc,\n  pixelCrop,\n  rotation = 0,\n  flip = { horizontal: false, vertical: false }\n) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  if (!ctx) {\n    return null\n  }\n\n  const rotRad = getRadianAngle(rotation)\n\n  // calculate bounding box of the rotated image\n  const { width: bBoxWidth, height: bBoxHeight } = rotateSize(\n    image.width,\n    image.height,\n    rotation\n  )\n\n  // set canvas size to match the bounding box\n  canvas.width = bBoxWidth\n  canvas.height = bBoxHeight\n\n  // translate canvas context to a central location to allow rotating and flipping around the center\n  ctx.translate(bBoxWidth / 2, bBoxHeight / 2)\n  ctx.rotate(rotRad)\n  ctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1)\n  ctx.translate(-image.width / 2, -image.height / 2)\n\n  // draw rotated image\n  ctx.drawImage(image, 0, 0)\n\n  // croppedAreaPixels values are bounding box relative\n  // extract the cropped image using these values\n  const data = ctx.getImageData(\n    pixelCrop.x,\n    pixelCrop.y,\n    pixelCrop.width,\n    pixelCrop.height\n  )\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image at the top left corner\n  ctx.putImageData(data, 0, 0)\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve, reject) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","import React, { useState, useRef } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { notificationVar } from '../graphql'\nimport { useContract } from '../utils'\n\nconst Report = ({ userAddress }) => {\n  const { chainId } = useParams()\n  const { address, contract } = useContract(chainId)\n  const [modal, setModal] = useState(false)\n  const ref = useRef()\n  return (\n    <>\n      {modal === 'REPORT' && (\n        <aside className='overlay'>\n          <aside className='Modal'>\n            <div className='Modal__top'>\n              <h3>Are you sure to report this user?</h3>\n            </div>\n            <textarea ref={ref} className='textarea' rows='3' placeholder='Explain why (optional)' />\n            <div className='Modal__bottom'>\n              <button\n                className='button grow primary'\n                onClick={async () => {\n                  try {\n                    notificationVar('Please confirm…')\n                    await contract.methods.reportUser(\n                      userAddress,\n                      ref.current.value,\n                    ).send({ from: address })\n                    notificationVar('User reported.')\n                    setModal('')\n                  } catch (error) {\n                    console.error(error)\n                    notificationVar(error.message)\n                  }\n                }}\n              >\n                Report\n              </button>\n              <button className='button grow' onClick={() => setModal('')}>\n                Back\n              </button>\n            </div>\n          </aside>\n        </aside>\n      )}\n      <svg onClick={() => setModal('REPORT')} className='button icon' height={35} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>\n        <path fill='none' d='M0 0h24v24H0z'/><path fill='currentColor' d='M5 16v6H3V3h9.382a1 1 0 0 1 .894.553L14 5h6a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1h-6.382a1 1 0 0 1-.894-.553L12 16H5zM5 5v9h8.236l1 2H19V7h-6.236l-1-2H5z'/>\n      </svg>\n    </>\n  )\n}\n\nexport default Report","import React, { useRef, useEffect, useState } from 'react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport { useCelo } from '@celo/react-celo'\nimport { BigNumber, ethers } from 'ethers'\nimport { getContract, useContract } from '../utils'\nimport { PROJECT_INFO, notificationVar } from '../graphql'\nimport { ReactComponent as Puzzle } from '../assets/puzzle.svg'\nimport Select from '../components/Select'\nimport Cropper from 'react-easy-crop'\nimport getCroppedImg from '../utils/cropImage'\nimport Report from '../components/Report'\nimport { ipfs, onFileSelected } from '../utils'\n\nfunction ProjectInfo ({ create }) {\n  const { chainId, projectId } = useParams()\n  const navigate = useNavigate()\n  const { connect } = useCelo()\n  const { address, contract, balance, cUSD, fetchBalance } = useContract(chainId)\n\n  const { data: { project } = {}, refetch } = useQuery(PROJECT_INFO, {\n    variables: { projectId },\n    onError: error => notificationVar(error.message),\n  })\n\n  const [ modal, setModal ] = useState('')\n  const [ mode, setMode ] = useState(create ? 'CREATE' : '')\n  const [ intersecting, setIntersecting ] = useState([])\n  const refs = useRef([ ...Array(101) ].map(() => React.createRef()))\n  const [ contribution, setContribution ] = useState(0)\n\n  const [img, setImg] = useState({})\n  const [ amount, setAmount ] = useState('')\n  const [ title, setTitle ] = useState('')\n  const [ description, setDescription ] = useState('')\n  const [ message, setMessage ] = useState('')\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\n  const [zoom, setZoom] = useState(1)\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\n\n  useEffect(() => {\n    if (project) {\n      if (project.fundedAmount !== project.requestedAmount) {\n        setContribution(1)\n      }\n      setAmount(ethers.utils.formatUnits(project.requestedAmount, 18))\n      setTitle(project.title)\n      setDescription(project.description)\n      const observer = new IntersectionObserver(\n        ([{ isIntersecting, target }]) => {\n          if (isIntersecting) {\n            setIntersecting((x) => [...x, +target.dataset.index])\n          } else {\n            setIntersecting((x) => x.filter((i) => i !== +target.dataset.index))\n          }\n        },\n        { rootMargin: '-40%' }\n      )\n      refs.current.forEach((ref) => ref.current && observer.observe(ref.current))\n      return () => observer.disconnect()\n    }\n  }, [ project ])\n\n  if (!project && !mode) return null\n  \n  const totalPieces = chainId === '1337' ? 25 : 100\n  const percentage = project && BigNumber.from(project.fundedAmount).mul?.(totalPieces).div(project.requestedAmount).toNumber()\n  const toClaim = project && ethers.utils.formatUnits(BigNumber.from(project.fundedAmount).sub?.(project.claimedAmount) || 0, 18)\n  const funded = project && ethers.utils.formatUnits(project.fundedAmount, 18)\n  const requested = project && ethers.utils.formatUnits(project.requestedAmount, 18)\n\n  const receiptsNb = project && project.collection.receipts.length\n  const ranges = project && project.collection.receipts.reduce((acc, curr) => [\n    ...acc, (acc[acc.length - 1] || 0) + (curr.amount / requested) * totalPieces,\n  ], [])\n  const chosen = project && intersecting[intersecting.length - 1]\n\n  return (\n    <div className='ProjectInfo'>\n      {!mode ? (\n        project.collection.receipts.length ? (\n          <svg className='svg' viewBox='0 0 320 180'>\n            <defs>\n              <image id='a' href={project.image} width='320' height='180' />\n            </defs>\n            {[ ...project.collection.receipts[receiptsNb - 1].image.matchAll(/<use.*?\\/>/g) ].map((m, i) => {\n              const owner = ranges.findIndex((x) => i < x)\n              return (\n                <use\n                  key={'use' + i}\n                  href='#a'\n                  clipPath={m[0].match(/clip-path='(.*?)'/)[1]}\n                  opacity={\n                    chosen > -1\n                      ? chosen === owner\n                        ? 1\n                        : owner > -1\n                          ? 0.3\n                          : 0.1\n                      : owner > -1\n                        ? 1\n                        : 1\n                  }\n                  style={{ transition: '0.3s' }}\n                />\n              )\n            })}\n          </svg>\n        ) : (\n          <img src={project.image} alt='' />\n        )\n      ) : (\n        <aside className='container'>\n          <div style={{ position: 'relative', aspectRatio: '16 / 9', zIndex: 2 }}>\n            <Cropper\n              image={img.dataUrl || project?.image}\n              aspect={16 / 9}\n              crop={crop}\n              onCropChange={setCrop}\n              onCropComplete={(_, croppedAreaPixels) => setCroppedAreaPixels(croppedAreaPixels)}\n              objectFit={img.width <= img.height ? 'horizontal-cover' : 'vertical-cover'}\n              zoom={zoom}\n              onZoomChange={setZoom}\n            />\n          </div>\n        </aside>\n      )}\n      <div className='info'>\n        {mode && (\n          <div className='banner'>\n            <label className='button secondary upload' htmlFor='image'>\n              {(img.height || project?.image) ? 'Replace' : 'Upload'} image\n              <input id='image' className='input' type='file' name='image' onChange={e => onFileSelected(e, setImg)} accept='image/*' />\n            </label>\n            <span className='requested'>\n              <input\n                className='input'\n                name='requested'\n                type='number'\n                step='1'\n                min='10'\n                placeholder='10'\n                inputMode='numeric'\n                disabled={requested}\n                value={amount}\n                onChange={e => setAmount(e.target.value)}\n              />\n            </span>    \n          </div>\n        )}\n        {!mode ? (\n          <h3 className='h3'>\n            <span>{project.title}</span>\n          </h3>\n        ) : (\n          <textarea\n            className='textarea editable'\n            name='title'\n            placeholder='Your project title'\n            rows='2'\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n        )}\n        {!mode && (\n          <div className='summary'>\n            <span className='amounts'>\n              <b>{funded} cUSD</b> funded / <b>{requested}</b>\n            </span>\n            <span>\n              by <b>{project.donators.length} donators</b>\n            </span>\n          </div>\n        )}\n        {!mode ? (\n           <p className='description'>\n            <span>{project.description}</span>\n          </p>\n        ) : (\n          <textarea\n            className='textarea editable'\n            name='description'\n            placeholder='A more detailed description…'\n            rows='10'\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n          />\n        )}\n      </div>\n      {!mode && (\n        <div className='timeline'>\n          <div className='h4'>\n            Contributions ({project.collection.receipts.length})\n            <span>{100 * percentage / totalPieces}% raised</span>\n          </div>\n          <ul className='ul'>\n            <li\n              className='li'\n              ref={refs.current[100]}\n              data-index={100}\n              style={{ opacity: chosen === 100 ? 1 : 0.5 }}\n              onMouseOver={() => setIntersecting([100])}\n              onMouseOut={() => setIntersecting([])}\n            >\n              <div className='label'>\n                <h5>\n                  <Link to={`/${chainId}/user/${project.creator.id.toLowerCase()}`} className='a plain'>\n                    {+address === +project.creator.id ? 'You' : `${project.creator.id.slice(0, 6)}…${project.creator.id.slice(-2)}`}\n                  </Link>\n                </h5>\n                <span className='small'>\n                  {new Date(project.createdAt * 1000).toLocaleDateString()}\n                </span>\n              </div>\n              <div className='label'>\n                <span>created the campaign</span>\n                <span className='small'></span>\n              </div>\n            </li>\n            {project.collection.receipts.map((r, i) => (\n              <li\n                ref={refs.current[i]}\n                data-index={i}\n                className='li donation'\n                style={{ opacity: chosen === i ? 1 : 0.5 }}\n                key={`${i}_${r.id}`}\n                onMouseOver={() => setIntersecting([i])}\n                onMouseOut={() => setIntersecting([])}\n              >\n                <div className='label'>\n                  <h5>\n                    <Link\n                      to={`/${chainId}/user/${r.donator.id.toLowerCase()}`}\n                      className='a plain'\n                    >\n                      {+address === +r.donator.id ? 'You' : `${r.donator.id.slice(0, 6)}…${r.donator.id.slice(-2)}`}\n                    </Link>\n                  </h5>\n                  <span className='small'>\n                    {new Date(r.timestamp * 1000).toLocaleDateString(undefined, { day: 'numeric', month: 'numeric' })}\n                  </span>\n                </div>\n                <div className='label'>\n                  <span>\n                    {' '}contributed <b>{r.amount} cUSD</b>\n                  </span>\n                  <span className='small'>\n                    &mdash;{' '}{r.donator.reports ? '(…)' : r.message}\n                  </span>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {!project || +address === +project.creator.id ? (\n        <div className='admin'>\n          {!mode ? (\n            <>\n              <button\n                disabled={!+toClaim}\n                className='button claim primary'\n                onClick={async () => {\n                  try {\n                    notificationVar('Please wait…')\n                    await contract.methods.claimProjectFunds(\n                      project.id\n                    ).send({ from: address })\n                    notificationVar('Funds successfully claimed!')\n                    fetchBalance(cUSD)\n                    setTimeout(refetch, 1000)\n                  } catch (error) {\n                    console.error(error)\n                    notificationVar(error.message)\n                  }\n                }}\n              >\n                Claim {toClaim} cUSD\n              </button>\n              <button className='button' onClick={() => setMode('EDIT')}>\n                Edit\n              </button>\n            </>\n          ) : (\n            <>\n              {mode === 'EDIT' && (\n                <button onClick={() => setMode('')} className='button'>\n                  Cancel\n                </button>\n              )}\n              <button\n                disabled={(!project && !img.dataUrl) || !title.trim() || !description.trim() || amount < 10}\n                className='button primary'\n                onClick={async () => {\n                  try {\n                    let url = project?.image\n                    if (img.dataUrl) {\n                      const croppedImage = await getCroppedImg(img.dataUrl, croppedAreaPixels, 0)\n                      const { path } = await ipfs.add(await fetch(croppedImage).then(r => r.blob()))\n                      url = `https://ipfs.infura.io/ipfs/${path}`\n                    }\n                    notificationVar('Please confirm…')\n                    if (mode === 'CREATE') {\n                      await contract.methods.createProject(\n                        title.trim(),\n                        description.trim(),\n                        ethers.utils.parseUnits(amount, 18),\n                        url,\n                      ).send({ from: address })\n                      notificationVar('Campaign successfully created!')\n                      setTimeout(() => navigate(`/${chainId}`), 1000)\n                    } else {\n                      await contract.methods.editProject(\n                        title.trim(),\n                        description.trim(),\n                        url,\n                      ).send({ from: address })\n                      notificationVar('Project successfully updated!')\n                      setTimeout(refetch, 1000)\n                    }\n                  } catch (error) {\n                    console.error(error)\n                    notificationVar(error.message)\n                  }\n                }}\n              >\n                {mode === 'CREATE' ? 'Create campaign' : 'Save'}\n              </button>\n            </>\n          )}\n        </div>\n      ) : (\n        <div className='contribute'>\n          <div className='h4'>\n            How can I help?\n            <span>\n              {totalPieces - percentage}{' '}\n              <Puzzle width={16} height={16} fill='rgba(97, 31, 105, 0.3)' color='rgba(97, 31, 105, 1)' strokeWidth={0.5} />\n              left\n            </span>\n          </div>\n          <main>\n            <div className='interact'>\n              <b>Give to this campaign</b>\n              <Select\n                contribution={contribution}\n                setContribution={setContribution}\n                percentage={percentage}\n                requested={requested}\n                totalPieces={totalPieces}\n              />\n              <div className='cta'>\n                <button\n                  className='button primary donate'\n                  disabled={\n                    isNaN(contribution) ||\n                    contribution <= 0 ||\n                    contribution > totalPieces - percentage\n                  }\n                  onClick={() => setModal('DONATE')}\n                >\n                  Donate now\n                </button>\n              </div>\n            </div>\n          </main>\n        </div>\n      )}\n      {!mode && (\n        <div className='contribute'>\n          <h5 className='h5'>Share this campaign</h5>\n          <div className='share'>\n            <button className='button secondary'>Copy link</button>\n            {+address !== +project.creator.id && (\n              <Report userAddress={project?.creator.id} />\n            )}\n          </div>\n        </div>\n      )}\n      {modal === 'DONATE' && (\n        <aside className='overlay'>\n          <aside className='Modal'>\n            <div className='Modal__top'>\n              <h3 className='h5'>Are you sure?</h3>\n              <span>\n                Current balance: <b>{balance !== null ? balance.toFixed(2) : '…'} cUSD</b>\n              </span>\n            </div>\n            <div className='interact'>\n              <Select\n                contribution={contribution}\n                setContribution={setContribution}\n                percentage={percentage}\n                requested={requested}\n                totalPieces={totalPieces}\n              />\n            </div>\n            <textarea\n              className='textarea'\n              rows='3'\n              placeholder='Leave a message (optional)'\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n            />\n            {address && (\n              <div className='Modal__warning'>\n                {balance < contribution * requested / totalPieces\n                  ? <span>Uh-oh, your balance is not high enough :/</span>\n                  : (isNaN(contribution) || contribution <= 0)\n                    ? <span>Looks like it's not a valid amount :/</span>\n                    : contribution > totalPieces - percentage\n                      ? <span>Sorry, there is only {totalPieces - percentage} pieces left :/</span>\n                      : null}\n              </div>\n            )}\n            <div className='Modal__bottom'>\n              <button className='button' onClick={() => setModal('')}>\n                Back\n              </button>\n              {balance !== null ? (\n                <button\n                  className='button grow primary'\n                  disabled={\n                    balance < contribution * requested / totalPieces ||\n                    isNaN(contribution) ||\n                    contribution <= 0 ||\n                    contribution > totalPieces - percentage\n                  }\n                  onClick={async () => {\n                    try {\n                      notificationVar('Waiting for approval…')\n                      const donation = ethers.utils.parseUnits((contribution * requested / totalPieces).toString(), 18)\n                      console.log(donation.toString())\n                      await cUSD.methods.approve(\n                        getContract(chainId),\n                        donation.toString(),\n                      ).send({ from: address })\n                      notificationVar('Please confirm…')\n                      await contract.methods.donateToProject(\n                        project.id,\n                        donation.toString(),\n                        message,\n                      ).send({ from: address })\n                      notificationVar('Donation successfully sent!')\n                      setModal('')\n                      fetchBalance(cUSD)\n                      setTimeout(refetch, 1000)\n                    } catch (error) {\n                      console.error(error)\n                      notificationVar(error.message)\n                    }\n                  }}\n                >\n                  {balance < contribution * requested / totalPieces ||\n                    isNaN(contribution) ||\n                    contribution <= 0 ||\n                    contribution > totalPieces - percentage\n                  ? 'Give'\n                  : `Give ${contribution * requested / totalPieces} cUSD`}\n                </button>\n              ) : (\n                <button className='button grow primary' onClick={connect}>\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </aside>\n        </aside>\n      )}\n    </div>\n  )\n}\n\nexport default ProjectInfo\n","import React, { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\nimport { BigNumber } from 'ethers'\nimport { PROFILE, notificationVar } from '../graphql'\nimport { useContract } from '../utils'\nimport Project from '../components/Project'\nimport Report from '../components/Report'\n\nfunction Profile () {\n  const { chainId, userAddress } = useParams()\n  const { address, balance } = useContract(chainId)\n\n  const { data: { receipts = [], projects = [] } = {} } = useQuery(PROFILE, {\n    variables: { userAddress },\n    onError: error => notificationVar(error.message),\n  })\n  const [dataImgs, setDataImgs] = useState({})\n\n  useEffect(() => {\n    setTimeout(async () => {\n      if (window.ReactNativeWebView) {\n        for (const receipt of receipts) {\n          const blob = await fetch(receipt.project.image).then(r => r.blob())\n          const dataImg = await new Promise((resolve, reject) => {\n            const reader = new FileReader()\n            reader.onerror = reject\n            reader.onload = () => resolve(reader.result)\n            reader.readAsDataURL(blob)\n          })\n          setDataImgs(dataImgs => ({ ...dataImgs, [receipt.project.id]: dataImg }))\n        }\n      }\n    })\n  }, [ userAddress, receipts ])\n\n  return (\n    <div className='Profile'>\n      <div className='top'>\n        <h1>\n          {userAddress.slice(0, 6)}…{userAddress.slice(-2)}\n          {+userAddress !== +address && '’s'}\n        </h1>\n        {+userAddress !== +address ? (\n          <Report userAddress={userAddress} />\n        ) : (\n          <span>\n            Current balance:<br />\n            <b>{balance?.toFixed(2)} cUSD</b>\n          </span>\n        )}\n      </div>\n      <div className='campaigns'>\n        <h2 className='h2'>\n          {+userAddress === +address ? 'Your campaigns' : 'Created campaigns'}\n          <span>({projects.length})</span>\n        </h2>\n        <div className='projects'>\n          {projects.map(p => (\n            <Project project={p} key={p.id} />\n          ))}\n          {+userAddress === +address && (\n            <Link to={`/${chainId}/new`} className='new'>\n              <div>\n                <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' height={18}><path fill='none' d='M0 0h24v24H0z'/><path fill='currentColor' d='M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z'/></svg>\n              </div>\n              <span>\n                Start a new campaign\n              </span>\n            </Link>\n          )}\n        </div>\n      </div>\n      <div className='contributions'>\n        <h2 className='h2'>\n          {+userAddress === +address ? 'Your contributions' : 'Public contributions'}\n          <span>({receipts.length})</span>\n        </h2>\n        <div className='projects'>\n          {receipts.map(p => {\n            // const link = '/' + p.description?.split('/').slice(3).join('/')\n            return (\n              <Link to={p.description} className={`a Project plain ${+address === +p.creator && 'mine'}`} key={p.id}>\n                {!window.ReactNativeWebView\n                  ? <object data={p.image} type='image/svg+xml' className='object' aria-label={p.title} />\n                  : <img src={p.image.replace(p.project.image, dataImgs[p.project.id])} className='img image' alt={p.title} />}\n              </Link>\n            )\n          })}\n          {+userAddress === +address && (\n            <Link to={`/${chainId}`} className='new'>\n              <div>\n                <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' height={16}><path fill='none' d='M0 0H24V24H0z'/><path fill='currentColor' d='M6 3c3.49 0 6.383 2.554 6.913 5.895C14.088 7.724 15.71 7 17.5 7H22v2.5c0 3.59-2.91 6.5-6.5 6.5H13v5h-2v-8H9c-3.866 0-7-3.134-7-7V3h4zm14 6h-2.5c-2.485 0-4.5 2.015-4.5 4.5v.5h2.5c2.485 0 4.5-2.015 4.5-4.5V9zM6 5H4v1c0 2.761 2.239 5 5 5h2v-1c0-2.761-2.239-5-5-5z'/></svg>\n              </div>\n              <span>\n                Explore projects\n              </span>\n            </Link>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom'\nimport App from './App'\nimport Explorer from './pages/Explorer'\nimport ProjectInfo from './pages/ProjectInfo'\nimport Profile from './pages/Profile'\n\nconst container = document.getElementById('root')\nconst root = createRoot(container)\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path='/'>\n          <Route index element={<Navigate to='/44787' replace />} />\n          <Route path=':chainId' element={<App />}>\n            <Route index element={<Explorer />} />\n            <Route path='new' element={<ProjectInfo create />} />\n            <Route path=':projectId' element={<ProjectInfo />} />\n            <Route path='user/:userAddress' element={<Profile />} />\n          </Route>\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n)\n"],"sourceRoot":""}